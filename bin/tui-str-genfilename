#!/usr/bin/env bash
# ------------------------------------------------------------------------
#
# Copyright (c) 2014-2015 by Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANT ABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
#-----------------------------------------------
#
#
#	Variables
#
	ME="${0##*/}"
	script_version=0.9.1
	beVerbose=false
	ME="${0##*/}"
	for tmp_task in "/etc" "${HOME:-/root}/.local" "$HOME"
	do 	[ -f "$tmp_task/tui.conf" ] && source "$tmp_task/tui.conf" && [ ! -z "${SYSCONFDIR}!" ] && break
	done
	# Get the main config files
	# 
	if source "${SYSCONFDIR}/tuirc" || ( [ -f ./tuirc ] && source ./tuirc )
	then 	source "$TUI_FILE_CONF_COMMANDS"
	else	source tuirc
	fi
	break_on_injections "$@" && exit 1
#
#	Translate preps
#
	source gettext.sh
	TEXTDOMAIN="${0##*/}"	# Will be changed over time, but easier to copy paste
	TEXTDOMAINDIR="${TUI_DIR_SYSTEM/tui/locale}"	# Will be changed over time, but easier to copy paste
	export TEXTDOMAIN TEXTDOMAINDIR
#
#	Translate strings
#
	TR_MSG_TEXT_VERSION="$(eval_gettext '
TUI ($ME, Version $script_version)
Copyright (C) 2011-2015 Simon Arjuna Erat
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
')"
	TR_MSG_TEXT_HELP="$(eval_gettext '
NAME
  $ME - Generate a filename, explace extension if provided

SYNOPSYS
  $ME [-h|--help] [--version] [/path/to/]BASENAME.EXT [NEW_EXTENSION]
  
DESCRIPTION
  If a NEW_EXTENSION is provided, it will be replacing EXT (if exists).
  If BASENAME with either the existing EXT or the NEW_EXTENSION already exists, a number will be inserted before the file its new/old EXT.
  If BASENAME has neither an old EXT nor a NEW_EXTENSION, the number will become its extension.
  The number will be increased until the generated file name does not exist yet.
  
OPTIONS
  -h|--help	Shows help and exit with 99
  --version	Shows version infoand exit with 0

EXAMPLE

	$ME tempfile.tmp
	
	$ME ../tempfile.tmp cache

BUGS
  Report bugs to: erat.simon@gmail.com
  
  TUI - Homepage: <http://www.gnu.org/software/tui/>
  
  General help using GNU software: <http://www.gnu.org/gethelp/>

AUTHOR
  Simon Arjuna Erat, <http://linux-scripter.blogspot.ch>
')"


#
#	Functions
#
	function showHelp() {
	# Shows the basic help screen
	#
		cat <<-EOF
			$TR_MSG_TEXT_HELP
		EOF
	}
	showVersion() { 
	cat <<-EOF
		$TR_MSG_TEXT_VERSION
	EOF
	}
	[ -z "$1" ] && showHelp && exit
#
# 	Arguments
#
	[ "--help" = "$1" ] && showHelp && exit 99
	[ "--version" = "${1,,}" ] && showVersion && exit 0
	while getopts "hv" opt
	do	case "$opt" in
		h)	showHelp
			exit
			;;
		v)	beVerbose=true
			shift
			;;
		esac
	done
	
	this="$1"	# File without EXT?
	EXT=$(tui-str-extension "$this")	# OLD
	ext="${2:-$EXT}"	# Fill 'ext' with old EXT if its empty
	this="${this%%$EXT}"
#
#	Action & Display
#
	# Set the initial name check according to presets:
	# Currently only known special case: tar
	NAME_INIT="${this/\.tar/}.$ext"
	NAME_INIT="${NAME_INIT/\.\./\.}"
	if [ -f "${NAME_INIT}" ]
	then	$beVerbose && \
			echo "$(eval_gettext '$NAME_INIT exists, appending/increasing number.')" >&2
		C=0		# Counter
		NAME_CHECK="${this/\.tar}.$C.$ext"
		NAME_CHECK="${NAME_CHECK/\.\./\.}"
		while [ -f "${NAME_CHECK}" ]
		do	C=$(( $C + 1 ))
			NAME_CHECK="${this/\.tar}.$C.$ext"
			NAME_CHECK="${NAME_CHECK/\.\./\.}"
			$beVerbose && printf "\r%s" "$(eval_gettext 'Checking for $NAME_CHECK')"  >&2
		done
		$beVerbose && [ $C -gt 0 ] && \
			printf "\n%s\n" "$(eval_gettext '$NAME_CHECK is available')"  >&2
		
		# Finally a file that does not exist yet
		echo "$NAME_CHECK" >&1
	else	# File does not exist, and can be used
		echo "$NAME_INIT"  >&1
	fi
exit 0
