#!/usr/bin/env bash
# ------------------------------------------------------------------------
#
# Copyright (c) 2015 by Simon Arjuna Erat (sea), erat.simon@gmail.com
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License (GPL) as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License (GPL) for more details.
#
# You should have received a copy of the GNU General Public License (GPL)
# along with this program.  If not, see http://www.gnu.org/licenses/gpl.html
#
# ------------------------------------------------------------------------
#
	ME="${0##*/}"
	for tmp_task in "/etc" "${HOME:-/root}/.local" "$HOME"
	do 	[ -f "$tmp_task/tui.conf" ] && source "$tmp_task/tui.conf" && [ ! -z "${SYSCONFDIR}!" ] && break
	done
	# Get the main config files
	# 
	if source "${SYSCONFDIR}/tuirc" && source "${HOME:-/root}/.tuirc" 2>/dev/zero
	then 	# Load required variables
		source "$TUI_FILE_CONF_COMMANDS"
		# Load language
		if [ -z "$TUI_LANG" ]
		then	[ -z "$LANG" ] && LANG=$(locale|sed s,[=\"],\ ,g|awk '/MESS/ {print $2}')
			lng="$(echo ${LANG/\.*})"
			echo "$TUI_DIR_LOCALE/"* | grep -q "${lng}" && \
				tui-conf-set "${HOME:-/root}/.tuirc" TUI_LANG "$lng" || \
				tui-conf-set "${HOME:-/root}/.tuirc" TUI_LANG en_GB
			# Sadly this echo is required to remove tailing spaces, probablly an issue of tui-conf-get (2015.08.21)
			TUI_LANG="$(echo $(tui-conf-get "${HOME:-/root}/.tuirc" TUI_LANG))"
		fi
		LANG_FILE=${ME/tui\-}.lng
		LANG_FILE="$TUI_DIR_LOCALE/${TUI_LANG}/$LANG_FILE"
		[ -f "$LANG_FILE" ] && source "$LANG_FILE" #|| tui-status 3 "$ME -- language file"
	else	source tuirc
	fi
	break_on_injections "$@" && exit 1
#
#	File:		tui-str-hash
#	Author: 	Simon Arjuna Erat (sea)
#	Contact:	erat.simon@gmail.com
#	License:	GNU General Public License (GPL)
#	Created:	2015.03.26
#	Changed:	2015.08.02
	script_version=0.4
	TITLE="tui-str-hash"
#	Description:	hashing text on the fly
#
#
#	Script Environment
#
	ME="${0##*/}"				# Basename of tui-str-hash
	ME="${ME/.sh/}"				# Cut off .sh extension
#
#	Variable defaults (options)
#
	beVerbose=false
#
#	Help text
#
	help_text="
$ME ($script_version)
${TITLE^}
Usage: 		$ME [options] arguments
Examples:	$ME 'teststring'
		$ME -t 384 'teststring'
		cat /tmp/password.txt | $ME -
Where options are:
	-h(elp) 		This screen
	-t(ype)		TYPE	Pass which type of hashing you want, default/fallback: md5sum

"
#
#	Catching Arguments
#
	[ "--help" = "$1" ] && printf "$help_text" && exit 99
	showVersion() { 
	cat <<-EOF
		GNU $ME, Version $script_version
		Copyright (C) 2015 Simon Arjuna Erat
		License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

		This is free software; you are free to change and redistribute it.
		There is NO WARRANTY, to the extent permitted by law.
	EOF
	}
	[ "--version" = "${1,,}" ] && showVersion && exit 0
	while getopts "hvt:" opt
	do 	case $opt in
		h)	printf "$help_text"
			exit $RET_HELP
			;;
		t)	TYPES+=" $OPTARG"
			;;
		v)	beVerbose=true
			;;
		*)	printf "$help_text" ; exit $?	;;
		esac
	done
	shift $(($OPTIND - 1))	# All options and they (if applicable) mandatory argument are removed
	for T in $TYPES;do 
		case $T in
		md5*)	TOOLS+=" md5sum"	;;
		*224*)	TOOLS+=" sha224sum"	;;
		*256*)	TOOLS+=" sha256sum"	;;
		*384*)	TOOLS+=" sha384sum"	;;
		*512*)	TOOLS+=" sha512sum"	;;
		*1*)	TOOLS+=" sha1sum"	;;
		esac
	done
	[ -z "$TOOLS" ] && TOOLS=md5sum
#
#	Display & Action
#
	if [ "-" = "$1" ] || [ "--" = "$1" ]
	then	# Do pipe handling
		while read stream
		do 	$beVerbose && tui-title "hashing: \"$A\""
			for T in $TOOLS
			do	str=$(echo -e "$stream" | $T | $AWK '{print $1}')
				$beVerbose && \
					tui-echo "$T:" "$str" || \
					echo "$str"
			done
		done
	else	for A in "${@}"
		do	$beVerbose && tui-title "hashing: \"$A\""
			for T in $TOOLS
			do	str=$(echo -e "$A" | $T | $AWK '{print $1}')
				$beVerbose && \
					tui-echo "$T:" "$str" || \
					echo "$str"
			done
		done
	fi