#!/usr/bin/env bash
# ------------------------------------------------------------------------
#
# Copyright (c) 2015 by Simon Arjuna Erat (sea), erat.simon@gmail.com
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License (GPL) as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANT ABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License (GPL) for more details.
#
# You should have received a copy of the GNU General Public License (GPL)
# along with this program.  If not, see http://www.gnu.org/licenses/gpl.html
#
# ------------------------------------------------------------------------
#
	ME="${0##*/}"
	for tmp_task in "/etc" "${HOME:-/root}/.local" "$HOME"
	do 	[ -f "$tmp_task/tui.conf" ] && source "$tmp_task/tui.conf" && [ ! -z "${SYSCONFDIR}!" ] && break
	done
	# Get the main config files
	# 
	if source "${SYSCONFDIR}/tuirc" || ( [ -f ./tuirc ] && source ./tuirc )
	then 	# Load required variables
		source "$TUI_FILE_CONF_COMMANDS"
	else	source tuirc
	fi
	break_on_injections "$@" && exit 1
#
#	File:		tui-str-hash
#	Author: 	Simon Arjuna Erat (sea)
#	Contact:	erat.simon@gmail.com
#	License:	GNU General Public License (GPL)
#	Created:	2015.03.26
#	Changed:	2015.11.07
	script_version=0.9.1
#	Description:	hashing text on the fly
#
#
#	Script Environment
#
	ME="${0##*/}"				# Basename of tui-str-hash
	ME="${ME/.sh/}"				# Cut off .sh extension
#
#	Variable defaults (options)
#
	beVerbose=false
#
#	Translate preps
#
	source gettext.sh
	TEXTDOMAIN="${0##*/}"	# Will be changed over time, but easier to copy paste
	TEXTDOMAINDIR="${TUI_DIR_SYSTEM/tui/locale}"	# Will be changed over time, but easier to copy paste
	export TEXTDOMAIN TEXTDOMAINDIR
#
#	Translate strings
#
	TR_MSG_TEXT_VERSION="$(eval_gettext '
TUI ($ME, Version $script_version)
Copyright (C) 2011-2015 Simon Arjuna Erat
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
')"
	TR_MSG_TEXT_HELP="$(eval_gettext '
NAME
  $ME - SHORTDESC

SYNOPSYS
  $ME [-h|--help] [--version] [-options] [-option arg]
  
DESCRIPTION
  desc
  
OPTIONS
  -h|--help	Shows help and exit with 99
  --version	Shows version infoand exit with 0
  
  -t TYPE	Pass which type of hashing you want, default/fallback: md5sum
  
  Hash types supported: sha1sum, sha224sum, sha256sum, sha384sum, sha512sum
 
EXAMPLE

	$ME -t 384 "some string"
	
	cat file.txt | $ME -

BUGS
  Report bugs to: erat.simon@gmail.com
  
  TUI - Homepage: <http://www.gnu.org/software/tui/>
  
  General help using GNU software: <http://www.gnu.org/gethelp/>

AUTHOR
  Simon Arjuna Erat, <http://linux-scripter.blogspot.ch>
')"


	help_text="$TR_MSG_TEXT_HELP
"
	TR_MSG_WORD_HASHING="$(gettext 'Hashing:')"
#
#	Catching Arguments
#
	[ "--help" = "$1" ] && printf "$help_text" && exit 99
	showVersion() { 
	cat <<-EOF
		$TR_MSG_TEXT_VERSION
	EOF
	}
	[ "--version" = "${1,,}" ] && showVersion && exit 0
	while getopts "hvt:" opt
	do 	case $opt in
		h)	printf "$help_text"
			exit $RET_HELP
			;;
		t)	TYPES+=" $OPTARG"
			;;
		v)	beVerbose=true
			;;
		*)	printf "$help_text" ; exit $?	;;
		esac
	done
	shift $(($OPTIND - 1))	# All options and they (if applicable) mandatory argument are removed
	for T in $TYPES;do 
		case $T in
		md5*)	TOOLS+=" md5sum"	;;
		*224*)	TOOLS+=" sha224sum"	;;
		*256*)	TOOLS+=" sha256sum"	;;
		*384*)	TOOLS+=" sha384sum"	;;
		*512*)	TOOLS+=" sha512sum"	;;
		*1*)	TOOLS+=" sha1sum"	;;
		esac
	done
	[ -z "$TOOLS" ] && TOOLS=md5sum
#
#	Display & Action
#
	if [ "-" = "$1" ] || [ "--" = "$1" ]
	then	# Do pipe handling
		while read stream
		do 	$beVerbose && tui-title "$TR_MSG_WORD_HASHING \"$A\""
			for T in $TOOLS
			do	str=$(echo -e "$stream" | $T | $AWK '{print $1}')
				$beVerbose && \
					tui-echo "$T:" "$str" || \
					echo "$str"
			done
		done
	else	for A in "${@}"
		do	$beVerbose && tui-title "$TR_MSG_WORD_HASHING \"$A\""
			for T in $TOOLS
			do	str=$(echo -e "$A" | $T | $AWK '{print $1}')
				$beVerbose && \
					tui-echo "$T:" "$str" || \
					echo "$str"
			done
		done
	fi
