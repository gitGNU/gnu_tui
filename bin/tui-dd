#!/usr/bin/env bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# -----------------------------------------------------------------------
#
#	Init TUI environment
#
	ME="${0##*/}"
	for tmp_task in "/etc" "${HOME:-/root}/.local" "$HOME"
	do 	[ -f "$tmp_task/tui.conf" ] && source "$tmp_task/tui.conf" && [ ! -z "${SYSCONFDIR}!" ] && break
	done
	# Get the main config files
	# 
	if source "${SYSCONFDIR}/tuirc" && source "${HOME:-/root}/.tuirc" 2>/dev/zero
	then 	# Load required variables
		for f in $TUI_FILE_{CONF,USER}_{APPS,COMMANDS,SETTINGS}
		do	[ -f "$f" ] && source "$f"
		done
	else	source tuirc
	fi
	break_on_injections "$@" && exit 1
	TERM="${TERM:-GNU Linux}"
#
#	Variable defaults
#
	script_version=0.9
	ME="${0##*/}"
#
#	Translate preps
#
	source gettext.sh
	TEXTDOMAIN="${0##*/}"	# Will be changed over time, but easier to copy paste
	TEXTDOMAINDIR="${TUI_DIR_SYSTEM/tui/locale}"	# Will be changed over time, but easier to copy paste
	export TEXTDOMAIN TEXTDOMAINDIR
#
#	Translate strings
#
	TR_MSG_TEXT_VERSION="$(eval_gettext '
GNU $ME, Version $script_version
Copyright (C) 2011-2015 Simon Arjuna Erat
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
')"
	TR_MSG_TEXT_HELP="$(eval_gettext '
$ME ($script_version)
Requires root rights.

Usage: $ME SOURCE TARGET
Writes SOURCE to TARGET

SOURCE and TARGET can be, a partition, disk, directory, file

Report bugs to: erat.simon@gmail.com
TUI home page: <http://www.gnu.org/software/tui/>
General help using GNU software: <http://www.gnu.org/gethelp/>
')"
	help_text="$TR_MSG_TEXT_HELP"
#
#	Variable handling
#
	SOURCE="$1"
	TARGET="$2"
	[ -f "$TUI_FILE_TEMP" ] && \
		>"$TUI_FILE_TEMP" || \
		touch "$TUI_FILE_TEMP"
	case "$SOURCE" in
	"-h"|"--help")	printf "$help_text"
		exit $RET_HELP
	esac
	showVersion() { 
	cat <<-EOF
		$TR_MSG_TEXT_VERSION
	EOF
	}
	[ "--version" = "${1,,}" ] && showVersion && exit 0
	case "$TARGET" in
	"")	if tui-yesno "Use USB as target?"
		then	TARGET=$(tui-str-usb)
		else	printf "$help_text"
			exit 1
		fi
		;;
	esac
	[ 0 -eq $UID ] || tui-status 1 "$(gettext 'Requires root')" || exit 1
	SRC="$(basename $SOURCE)"
	TR_MSG_STRING_WORK="$(eval_gettext 'Writing $SRC to $TARGET...')"
	TR_MSG_STRING_DONE="$(eval_gettext 'Written $SRC to $TARGET')"
#
#	Display
#
	tui-printf "$(gettext 'Starting job, please wait...'" "$WORK"
	(dd if="$SOURCE" of="$TARGET" 2> "$TUI_FILE_TEMP" ; printf $? > "$TUI_FILE_TEMP")   &
	sleep 0.7
	PID=$(ps|$GREP -v tui|$GREP dd|$AWK '{print $1}')
	MAX=$($LS -l "$SOURCE"|$AWK '{print $5}')
	
	while [ ! "" = "$(ps|$GREP -v tui|$GREP dd|$AWK '{print $1}')" ]
	do 	kill -USR1 $PID 2>&1
	 	SIZE=($(tail -n 3 "$TUI_FILE_TEMP" | $GREP "Bytes"|$AWK '{print $1}'))
		MB=($(tail -n 3 "$TUI_FILE_TEMP" | $GREP "Bytes"|$AWK '{print $3}'))
		tui-progress -lbm $MAX -c ${SIZE:-$MAX} "$TR_MSG_STRING_WORK" "$MB"
		sleep 0.7
	done
	tui-status $? "$TR_MSG_STRING_DONE"
