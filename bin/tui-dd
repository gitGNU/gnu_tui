#!/usr/bin/env bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Variable defaults
#
	source "$HOME/.tui_rc" && \
		. "$TUI_DIR_CONF/apps.conf" && \
		. "$TUI_DIR_CONF/commands.conf" && \
		. "$TUI_DIR_CONF/settings.conf" && \
		. "$TUI_DIR_USER/apps.conf" && \
		. "$TUI_FILE_CONF_SETTINGS" || \
		. tui	# This first call would create the RC if its missing.
	#cat "$TUI_FILE_CONF_APPS"
	script_version=0.6
	ME="$(basename $0)"
	help_text="
$ME ($script_version)
Requires root rights.

Usage: $ME SOURCE TARGET
Writes SOURCE to TARGET

SOURCE and TARGET can be, a partition, disk, directory, file
"
#
#	Variable handling
#
	SOURCE="$1"
	TARGET="$2"
	[ -f "$TUI_FILE_TEMP" ] && \
		>"$TUI_FILE_TEMP" || \
		touch "$TUI_FILE_TEMP"
	case "$SOURCE" in
	-h)	printf "$help_text"
		exit $RET_HELP
	esac
	case "$TARGET" in
	"")	if tui-yesno "Use USB as target?"
		then	TARGET=$(tui-str-usb)
		else	printf "$help_text"
			exit 1
		fi
		;;
	esac
	[ 0 -eq $UID ] || tui-status 1 "Requires root" || exit 1
#
#	Display
#
	tui-printf "Starting job, please wait..." "$WORK"
	(dd if="$SOURCE" of="$TARGET" 2> "$TUI_FILE_TEMP" ; printf $? > "$TUI_FILE_TEMP")   &
	sleep 0.7
	PID=$(ps|$GREP -v tui|$GREP dd|$AWK '{print $1}')
	MAX=$($LS -l "$SOURCE"|$AWK '{print $5}')
	
	while [ ! "" = "$(ps|$GREP -v tui|$GREP dd|$AWK '{print $1}')" ]
	do 	kill -USR1 $PID 2>&1
	 	#kill -USR1 $PID 2>"$TUI_FILE_TEMP" #2>&1
		#cat $TUI_FILE_TEMP
		SIZE=($(tail -n 3 "$TUI_FILE_TEMP" | $GREP "Bytes"|$AWK '{print $1}'))
		MB=($(tail -n 3 "$TUI_FILE_TEMP" | $GREP "Bytes"|$AWK '{print $3}'))
		#echo $SIZE
		#[ ${#SIZE[@]} -lt 1 ] && max=0 || max=$[ ${#SIZE[@]} - 1 ]
		#tui-printf "Writing $(basename $SOURCE) to $TARGET..." "${SIZE[$max]}" "[  $(tui-indi)   ]"
		#CUR=$($LS -l "$SOURCE"|$AWK '{print $5}')
		tui-progress -lbm $MAX -c ${SIZE:-$MAX} "Writing $(basename $SOURCE) to $TARGET..." "$MB"
		sleep 0.7
	done
	tui-status $? "Written $(basename $SOURCE) to $TARGET"
