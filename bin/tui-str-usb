#!/usr/bin/env bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Variable environment
#
	BORDER_RIGHT=""
	# Source only the most required files, 
	# create the RC and load all variable if RC is not present yet.
	source "$HOME/.tuirc" && \
		. "$TUI_FILE_CONF_COMMANDS" && \
		. "$TUI_FILE_CONF_COLORS" && \
		. "$TUI_FILE_CONF_STATUS" && \
		. "$TUI_FILE_CONF_SYSTEM"  && \
		. "$TUI_FILE_CONF_SETTINGS"  && \
		. "$TUI_FILE_USER_SETTINGS"  || \
		. tuirc
	# If there is a user theme directory, use that one instead
	[ -d "$TUI_DIR_USER_THEMES" ] && TUI_DIR_THEMES="$TUI_DIR_USER_THEMES"
	. "$TUI_DIR_THEMES/$TUI_THEME" 
	# Use custom BORDER_RIGHT if it was set
	[ -z "$BORDER_RIGHT" ] && \
		for((i=${#BORDER_LEFT}-1;i>=0;i--)); do BORDER_RIGHT="$BORDER_RIGHT${BORDER_LEFT:$i:1}"; done
#
#	Variable defaults
#
	script_version=0.7
	ME="${0##*/}"
	help_text="\r$ME ($script_version)
		\rUsage: $ME [options]
		\rSelect usb device if more than one is found
		\rWhere options are:
		\r\t-h\tThis screen
		\r\t-a\tAutoselect entry if only one was found
		\r
		\r"
	targetusb=""
	devDisk=/dev/disk/by-id
	tDev=""
	AUTO=false		# Automaticly select only available option
#
#	Variable handling
#
	[ "--help" = "$1" ] && printf "$help_text" && exit 99
	showVersion() { 
	cat <<-EOF
		GNU TUI - $ME, Version $script_version
		Copyright (C) 2013 Free Software Foundation, Inc.
		License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

		This is free software; you are free to change and redistribute it.
		There is NO WARRANTY, to the extent permitted by law.
	EOF
	}
	[ "--version" = "${1,,}" ] && showVersion && exit 0
	while getopts h opt
	do	case "$opt" in
		h)	echo -e "$help_text"
			exit $RET_HELP
			;;
		a)	AUTO=true
			;;
	esac
	done
	shift $(($OPTIND -1))
#
#	Functions
#
	getspace() { # NUM
	# Returns string of NUM space chars
	#
		C=0 ; out=""
		while [ $C -lt $1 ];do out+=" ";let C++;done
		printf "$out"
	}
	getlist() { # 
	# Lists the contend of $devDisk, limits the output to usb items and removes partition entries
	# If there is something to ignore, that one will be hidden too
		if [ -z "$usbIgnore" ] 
		then	$LS $devDisk | $GREP usb | $GREP -v part
		else	$LS $devDisk | $GREP usb | $GREP -v part | $GREP -v "$usbIgnore"
		fi
	}
#
#	Display
#
	# Make sure there is something available
	msg="Please connect an USB device..."
	left="$BORDER_LEFT $msg"
	list=""
	sleeper=0.0001
	# Loop while waiting for --item-list-without-the-ignored-ones--
	while [ -z "$list" ] ; do
		tui-progress "$msg" > /dev/stderr
		list=$(getlist) 2>/dev/zero
		list="${list/$usbIgnore}"
		sleep $sleeper
		[ "$sleeper" = "0.0001" ] && sleeper=1.2
	done
#
#	Check for user settings for default behaviour.
#	This is required so internal cardreaders dont get in the way, 
#	or so you can select to (not) use it automaticly
#
	#echo "if [ "$(echo $list|wc -l)" -eq 1 ] && [ -z "$usbAsk" ] "
	if [ "$(echo $list|wc -w)" -eq 1 ] && [ -z "$usbAsk" ] 
	then	# There is no setting yet, first time usage
		tui-echo "The only device available is:" "${list}" > /dev/stderr
		if tui-yesno "Is this a cardreader that is always listed?" > /dev/stderr
		then	if tui-yesno "Ignore this device in future calls?" > /dev/stderr
			then	# Save the cardreader
				tui-conf-set -v "$TUI_FILE_USER_SETTINGS" usbIgnore "\"$list\""
				RET=1
			else	tui-echo "Do you want to be asked to select this device everytime?"
				tui-yesno "No, might result in that device beeing auto-selected!"
				RET=$?
			fi
		else	RET=1
		fi
		tui-conf-set -v "$TUI_FILE_USER_SETTINGS" usbAsk $(tui-str-bol-conv -t $RET)  > /dev/stderr
		source "$TUI_FILE_USER_SETTINGS"
		[ -z "$usbIgnore" ] || exit 1
	fi
#
#	Ask now or not?
#
	if $usbAsk
	then	$AUTO && \
			targetUsb=$(tui-select -a $list) || \
			targetUsb=$(tui-select $list)
	else	targetUsb=$(tui-select -a $list)
	fi
	tDev=$(readlink -f $devDisk/$targetUsb)
	echo $tDev
