#!/usr/bin/env bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANT ABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Init TUI environment
#
	ME="${0##*/}"
	for tmp_task in "/etc" "${HOME:-/root}/.local" "$HOME"
	do 	[ -f "$tmp_task/tui.conf" ] && source "$tmp_task/tui.conf" && [ ! -z "${SYSCONFDIR}!" ] && break
	done
	# Get the main config files
	# 
	if source "${SYSCONFDIR}/tuirc" || ( [ -f ./tuirc ] && source ./tuirc )
	then 	# Load required variables
		for f in $TUI_FILE_{CONF,USER}_{APPS,COLORS,COMMANDS,SETTINGS,STATUS,SYSTEM}
		do	[ -f "$f" ] && source "$f"
		done
	else	source tuirc
	fi
	break_on_injections "$@" && exit 1
	TERM="${TERM:-GNU Linux}"
#
#	Author: 	Simon Arjuna Erat (sea)
#	Contact:	erat.simon@gmail.com
#	License:	GNU General Public License 3 (GPLv3)
#	Created:	2011.07.10
#	Changed:	2015.11.07
#
#
#	Variable defaults
#
	script_version=1.6.1
	# higher number, and more and more in another script..lol
	ME="${0##*/}"
#
#	Translate preps
#
	source gettext.sh
	TEXTDOMAIN="${0##*/}"	# Will be changed over time, but easier to copy paste
	TEXTDOMAINDIR="${TUI_DIR_SYSTEM/tui/locale}"	# Will be changed over time, but easier to copy paste
	export TEXTDOMAIN TEXTDOMAINDIR
#
#	Translate strings
#
	TR_MSG_TEXT_VERSION="$(eval_gettext '
TUI ($ME, Version $script_version)
Copyright (C) 2011-2015 Simon Arjuna Erat
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
')"
	TR_MSG_TEXT_HELP="$(eval_gettext '
NAME
  $ME - Status Messages

SYNOPSYS
  $ME [-h|--help] [--version] [-r] RET ["Message to user" ["Center string"]]
  
DESCRIPTION
  desc
  
OPTIONS
  -h|--help	Shows help and exit with 99
  --version	Shows version infoand exit with 0
  
  -r	Return on line, do not do a newline.
 
  Interpreted exit codes are:
')"
	TR_MSG_TEXT_HELP_ENDING="$(gettext '
EXAMPLE

	$ME 0 "Your account exists:" "\044USER"
	
	$ME -r 2 "Loading data..." ; sleep 1 ; $ME \044? "Loaded data."

BUGS
  Report bugs to: erat.simon@gmail.com
  
  TUI - Homepage: <http://www.gnu.org/software/tui/>
  
  General help using GNU software: <http://www.gnu.org/gethelp/>

AUTHOR
  Simon Arjuna Erat, <http://linux-scripter.blogspot.ch>')"
#
#	Display
#	
	showVersion() { 
	cat <<-EOF
		$TR_MSG_TEXT_VERSION
	EOF
	}
	[ "--version" = "${1,,}" ] && showVersion && exit 0
	if [ -z "$1" ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]
	then	#	Fill array according to return value
		#	This is just required for the help output
		unset retvalue[@]
		retvalue[0]="$TUI_DONE" ;	retvalue[1]="$TUI_FAIL"
		retvalue[2]="$TUI_WORK" ;	retvalue[3]="$TUI_TODO"
		retvalue[4]="$TUI_SKIP" ;	retvalue[5]="$TUI_NEXT"
		retvalue[6]="$TUI_BACK" ;	retvalue[7]="$TUI_CANC"
		retvalue[10]="$TUI_ON"	;	retvalue[11]="$TUI_OFF"
		retvalue[99]="$TUI_HELP";	retvalue[111]="$TUI_INFO"
		retvalue[127]="$TUI_NFOUND";	retvalue[130]="$TUI_CANC"
		
		printf "$TR_MSG_TEXT_HELP
"
		for num in $(seq 0 1 130)
		do	str="${retvalue[$num]}"
			[ ! "" = "$(printf '%s' $str)" ] && \
				printf "\t$num \t\174 \$RET_$(printf ${STATUS_TEXT[$num]})\t = \t$str  =\t\$TUI_$(printf ${STATUS_TEXT[$num]})\n"
		done
		
		printf "\r$TR_MSG_TEXT_HELP_ENDING
"		
		
		exit $RET_HELP
	fi
	R=""
	while getopts r opt
	do	case $opt in	
		r)	R="r"
			shift	;;
		esac
	done
	arg="$1"
	check=$(echo "$arg" | tr -d '[:digit:]')
	if [ ! -z "$check" ]
	then	echo "$(eval_gettext 'First argument $arg ($check) is not numeric!')" >&2
		exit 1
	fi

	tui-printf -${R}S "${@}"
	exit ${1:-1}
