#!/usr/bin/env bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Author: 	Simon Arjuna Erat (sea)
#	Contact:	erat.simon@gmail.com
#	License:	GNU General Public License 3 (GPLv3)
#	Created:	2011.07.10
#	Changed:	2015.06.27
#
#	Variables to display
#	Diffrent for GUI or CLI
#
	source "$HOME/.tuirc" || . tuirc
	for f in $TUI_FILE_{CONF,USER}_{APPS,COMMANDS,COLORS,SETTINGS,STATUS,SYSTEM}
	do	[ -f "$f" ] && source "$f"
	done
#
#	Variable defaults
#
	script_version=1.6
	# higher number, and more and more in another script..lol
	ME="${0##*/}"
	help_text="Usage: $ME [option] ERRORLEVEL \"Message to user\" [\"centred Message\"]
Where options are:
	-h	This screen
	-r	Return on line, dont do a newline.
"
#
#	Display
#	
	showVersion() { 
	cat <<-EOF
		GNU $ME, Version $script_version
		Copyright (C) 2015 Simon Arjuna Erat
		License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

		This is free software; you are free to change and redistribute it.
		There is NO WARRANTY, to the extent permitted by law.
	EOF
	}
	[ "--version" = "${1,,}" ] && showVersion && exit 0
	if [ -z "$1" ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]
	then	#	Fill array according to return value
		#	This is just required for the help output
		unset retvalue[@]
		retvalue[0]="$TUI_DONE" ;	retvalue[1]="$TUI_FAIL"
		retvalue[2]="$TUI_WORK" ;	retvalue[3]="$TUI_TODO"
		retvalue[4]="$TUI_SKIP" ;	retvalue[5]="$TUI_NEXT"
		retvalue[6]="$TUI_BACK" ;	retvalue[7]="$TUI_CANC"
		retvalue[10]="$TUI_ON"	;	retvalue[11]="$TUI_OFF"
		retvalue[99]="$TUI_HELP";	retvalue[111]="$TUI_INFO"
		retvalue[127]="$TUI_NFOUND";	retvalue[130]="$TUI_CANC"
		
		printf "$help_text

Interpreted errorlevels are:\n"
		for num in $(seq 0 1 130)
		do	str="${retvalue[$num]}"
			[ ! "" = "$(printf '%s' $str)" ] && \
				printf "\t$num \tor \$RET_$(printf ${STATUS_TEXT[$num]})\t = \t$str  =\t\$TUI_$(printf ${STATUS_TEXT[$num]})\n"
		done
		
		exit $RET_HELP
	fi
	R=""
	while getopts r opt
	do	case $opt in	
		r)	R="r"
			shift	;;
		esac
	done
	check=$(echo "$1" | tr -d '[:digit:]')
	if [ ! -z "$check" ]
	then	echo "First argument $1 ($check) is not numeric!" > /dev/stderr
		exit 1
	fi

	tui-printf -${R}S "${@}"
	exit $1
