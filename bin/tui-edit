#!/usr/bin/env bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Init TUI environment
#
	ME="${0##*/}"
	for tmp_task in "/etc" "${HOME:-/root}/.local" "$HOME"
	do 	[ -f "$tmp_task/tui.conf" ] && source "$tmp_task/tui.conf" && [ ! -z "${SYSCONFDIR}!" ] && break
	done
	# Get the main config files
	# 
	if source "${SYSCONFDIR}/tuirc" && source "${HOME:-/root}/.tuirc" 2>/dev/zero
	then 	# Load required variables
		for f in $TUI_FILE_{CONF,USER}_{APPS,COMMANDS,SETTINGS}
		do	[ -f "$f" ] && source "$f"
		done
		# Load language
		if [ -z "$TUI_LANG" ]
		then	[ -z "$LANG" ] && LANG=$(locale|sed s,[=\"],\ ,g|awk '/MESS/ {print $2}')
			lng="$(echo ${LANG/\.*})"
			echo "$TUI_DIR_LOCALE/"* | grep -q "${lng}" && \
				tui-conf-set "${HOME:-/root}/.tuirc" TUI_LANG "$lng" || \
				tui-conf-set "${HOME:-/root}/.tuirc" TUI_LANG en_GB
			# Sadly this echo is required to remove tailing spaces, probablly an issue of tui-conf-get (2015.08.21)
			TUI_LANG="$(echo $(tui-conf-get "${HOME:-/root}/.tuirc" TUI_LANG))"
		fi
		LANG_FILE=${ME/tui\-}.sh
		LANG_FILE="$TUI_DIR_LOCALE/${TUI_LANG}/$LANG_FILE"
		[ -f "$LANG_FILE" ] && source "$LANG_FILE" #|| tui-status 3 "$ME -- language file"
	else	source tuirc
	fi
	break_on_injections "$@" && exit 1
#
#	Author: 	Simon Arjuna Erat (sea)
#	Contact:	erat.simon@gmail.com
#	License:	GNU General Public License 3 (GPLv3)
#	Created:	2011.07.10
#	Changed:	2015.05.25
#
#
#	Variable defaults
#
	script_version=1.5.1
	ME="${0##*/}"
#
#	Check for the environment to load
#
	# Get the mode
	tui-bol-gui && \
		MODE=gui || \
		MODE=cli
#
#	Variable handling
#
	showVersion() { 
	cat <<-EOF
		GNU $ME, Version $script_version
		Copyright (C) 2015 Simon Arjuna Erat
		License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

		This is free software; you are free to change and redistribute it.
		There is NO WARRANTY, to the extent permitted by law.
	EOF
	}
	case "$1" in
	"--version")	showVersion
			exit 0
			;;
	"-h"|"--help"|"")
		printf '%s\n' \
			"$ME ($script_version)" \
			"Usage: $ME [options] [/path/to/]FILE [../]FILE2 ..." \
			"" \
			"	Opens provided FILE/s in the preferred editor according to environment." \
			"	In multi-user or emergency stage it will open \"$EDITOR_CLI\" and in graphical stage it will open \"$EDITOR_GUI\"" \
			""
		exit "$RET_HELP"
		;;
	"-c")	MODE=cli
		shift
		;;
	esac
	
	ARGS=($(echo "${@}"))
#
#	Functions
#
	GetAvailableApp() { # gui|cli
	# Returns the first found editor for either GUI or CLI
	#
		for L in $(<"$TUI_DIR_LIST"/editor_${MODE});do
			which "$L" 2>/dev/zero && \
				return 0
		done
		return 1
	}
#
#	Display
#
	if [ -z "$EDITOR" ]
	then	case "$MODE" in
		cli)	EDITOR=$(which "$EDITOR_CLI" 2>/dev/zero )	;;
		gui)	EDITOR=$(which "$EDITOR_GUI" 2>/dev/zero )	;;
		esac
		export EDITOR
	fi
	# Failsafe check, use first available editor found if set EDITOR was not found
	if [ -z "$EDITOR" ]
	then 	# The EDITOR is not available, search for default
		EDITOR=$(GetAvailableApp "$MODE")
		[ "$MODE" = cli ] && \
			var=EDITOR_CLI || \
			var=EDITOR_GUI
		[ -z "$EDITOR" ] && \
			tui-echo "No editor for $MODE mode could be found, please change \"$TUI_FILE_USER_APPS\" manually!" && \
			exit 1
		tui-conf-set "$TUI_FILE_USER_APPS" "$var" "$EDITOR"
	fi
	# Open each file 'separately',
	# as not all editors support to open multiple files at once
	for A in "${ARGS[@]}";do
		[ ! -z "$A" ] && \
			tui-printf -E "Opening:" "$A" && \
			"$EDITOR" "$A"
	done
