#!/usr/bin/env bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANT ABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Init TUI environment
#
	ME="${0##*/}"
	for tmp_task in "/etc" "${HOME:-/root}/.local" "$HOME"
	do 	[ -f "$tmp_task/tui.conf" ] && source "$tmp_task/tui.conf" && [ ! -z "${SYSCONFDIR}!" ] && break
	done
	# Get the main config files
	# 
	if source "${SYSCONFDIR}/tuirc" || ( [ -f ./tuirc ] && source ./tuirc )
	then 	# Load required variables
		for f in $TUI_FILE_{CONF,USER}_{APPS,COMMANDS,SETTINGS}
		do	[ -f "$f" ] && source "$f"
		done
	else	source tuirc
	fi
	break_on_injections "$@" && exit 1
#
#	Author: 	Simon Arjuna Erat (sea)
#	Contact:	erat.simon@gmail.com
#	License:	GNU General Public License 3 (GPLv3)
#	Created:	2011.07.10
#	Changed:	2015.11.07
#
#
#	Variable defaults
#
	script_version=1.5.5
	ME="${0##*/}"
#
#	Translate preps
#
	source gettext.sh
	TEXTDOMAIN="${0##*/}"	# Will be changed over time, but easier to copy paste
	TEXTDOMAINDIR="${TUI_DIR_SYSTEM/tui/locale}"	# Will be changed over time, but easier to copy paste
	export TEXTDOMAIN TEXTDOMAINDIR
#
#	Translate strings
#
	TR_MSG_TEXT_VERSION="$(eval_gettext '
TUI ($ME, Version $script_version)
Copyright (C) 2011-2015 Simon Arjuna Erat
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
')"
	TR_MSG_TEXT_HELP="$(eval_gettext '
NAME
  $ME - Opens passed files in the favorite editor (gui/cli)

SYNOPSYS
  $ME [-h|--help] [--version] [/path/to/]FILE [../]FILE2 ...
  
DESCRIPTION
  Opens provided FILE/s in the preferred editor according to environment.
  In multi-user or emergency stage it will open \"$EDITOR_CLI\" and in graphical stage it will open \"$EDITOR_GUI\"
  
OPTIONS
  -h|--help	Shows help and exit with 99
  --version	Shows version infoand exit with 0
  
BUGS
  Report bugs to: <tui-support@nongnu.org>
  
  TUI - Homepage: <https://savannah.nongnu.org/projects/tui>
  
  General help using GNU software: <http://www.gnu.org/gethelp/>

AUTHOR
  Simon Arjuna Erat, <http://linux-scripter.blogspot.ch>
')"
#
#	Check for the environment to load
#
	# Get the mode
	tui-bol-gui && \
		MODE=gui || \
		MODE=cli
#
#	Variable handling
#
	showVersion() { 
	cat <<-EOF
		$TR_MSG_TEXT_VERSION
	EOF
	}
	case "$1" in
	"--version")	showVersion
			exit 0
			;;
	"-h"|"--help"|"")
		echo "$TR_MSG_TEXT_HELP"
		exit $RET_HELP
		;;
	"-c")	MODE=cli
		shift
		;;
	esac
	
	ARGS=($(echo "${@}"))
#
#	Functions
#
	GetAvailableApp() { # gui|cli
	# Returns the first found editor for either GUI or CLI
	#
		for L in $(<"$TUI_DIR_LIST"/editor_${MODE});do
			which "$L" 2>/dev/null && \
				return 0
		done
		return 1
	}
#
#	Display
#
	if [ -z "$EDITOR" ]
	then	case "$MODE" in
		cli)	EDITOR=$(which "$EDITOR_CLI" 2>/dev/null )	;;
		gui)	EDITOR=$(which "$EDITOR_GUI" 2>/dev/null )	;;
		esac
		export EDITOR
	fi
	# Fail safe check, use first available editor found if set EDITOR was not found
	if [ -z "$EDITOR" ]
	then 	# The EDITOR is not available, search for default
		EDITOR=$(GetAvailableApp "$MODE")
		[ "$MODE" = cli ] && \
			var=EDITOR_CLI || \
			var=EDITOR_GUI
		[ -z "$EDITOR" ] && \
			tui-print -E  "$(eval_gettext 'No editor for $MODE mode could be found, please change \"$TUI_FILE_USER_APPS\" manually!')" && \
			exit 1
		tui-conf-set "$TUI_FILE_USER_APPS" "$var" "$EDITOR"
	fi
	# Open each file 'separately',
	# as not all editors support to open multiple files at once
	if tui-bol-gui
	then	tui-print -E  "$(gettext 'Opening:')" "${ARGS[@]}"
		$EDITOR "${ARGS[@]}"
	else	for A in "${ARGS[@]}";do
		[ ! -z "$A" ] && \
			tui-print -E  "$(gettext 'Opening:')" "$A" && \
			"$EDITOR" "$A"
		done
	fi
