#!/usr/bin/env bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Author: 	Simon A. Erat (sea)
#	Contact:	erat.simon@gmail.com
#
#	Variable environment
#
	BORDER_RIGHT=""
	# Source only the most required files, 
	# create the RC and load all variable if RC is not present yet.
	source "$HOME/.tui_rc" || . tui
	for f in $TUI_FILE_CONF_{COMMANDS,COLORS,SETTINGS,SYSTEM}
	do	source "$f"
	done
	source "$TUI_FILE_USER_SETTINGS"
	# If there is a user theme directory, use that one instead
	if [ -f "$TUI_DIR_USER_THEMES/$TUI_THEME" ]
	then	. "$TUI_DIR_USER_THEMES/$TUI_THEME"
	else	. "$TUI_DIR_THEMES/$TUI_THEME" 
	fi
	# Use custom BORDER_RIGHT if it was set
	[ -z "$BORDER_RIGHT" ] && \
		for((i=${#BORDER_LEFT}-1;i>=0;i--)); do BORDER_RIGHT="$BORDER_RIGHT${BORDER_LEFT:$i:1}"; done
#
#	Variable defaults
#
	script_version=1.0.2
	ME="${0##*/}"
	help_text="
$ME ($script_version)
Usage: 		$ME [options] MSG
Examples:	$ME \"What is your favorite color?\"
		password=\$($ME -p \"Enter your password:\")

"
	doPassword=""
#
#	Variable handling
#
	[ -z "$1" ] && printf "$help_text" && exit $RET_HELP
	while getopts "hp" opt;do
	case "$opt" in
	"h")	printf "$help_text" ; exit $RET_HELP
		;;
	"p")	doPassword="-se"	
		;;
	esac
	done
	shift $(($OPTIND - 1))
#
#	Prepare command
#
	sourceAgain=false
	if [ -z "$select_read_numbers" ]
	then	read -h 2>&1|grep -q "\-n"
		tui-conf-set "$TUI_FILE_USER_SETTINGS" select_read_numbers $(tui-str-bol-conv -t $?)
		sourceAgain=true
	fi
	if [ -z "$select_read_timeout" ]
	then	read -h 2>&1|grep -q "\-t"
		tui-conf-set "$TUI_FILE_USER_SETTINGS" select_read_timeout $(tui-str-bol-conv -t $?)
		sourceAgain=true
	fi
	$sourceAgain && source "$TUI_FILE_USER_SETTINGS"
#
#	Display
#
	[ -z "$1" ] && \
		txt="Type your input:" || \
		txt="$1"
	tui-printf "$txt" > /dev/stderr
	printf "\r$BORDER_LEFT $txt " >&2
	read ${doPassword} INPUT </dev/tty
	printf '%s' "$INPUT"  >&1
	[ -z "$doPassword" ] || printf "\n" >&2