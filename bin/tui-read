#!/usr/bin/env bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Init TUI environment
#
	if source /etc/tuirc && source "$HOME/.tuirc"
	then	for f in $TUI_FILE_{CONF,USER}_{APPS,COMMANDS,SETTINGS};do source "$f";done
	else	source tuirc
	fi
	break_on_injections "$@" && exit 1
#
#	Author: 	Simon A. Erat (sea)
#	Contact:	erat.simon@gmail.com
#
#	Variable environment
#
	BORDER_RIGHT=""
	# Source only the most required files, 
	# create the RC and load all variable if RC is not present yet.
	# If there is a user theme directory, use that one instead
	if [ -f "$TUI_DIR_USER_THEMES/$TUI_THEME" ]
	then	source "$TUI_DIR_USER_THEMES/$TUI_THEME"
	else	source "$TUI_DIR_THEMES/$TUI_THEME" 
	fi
	# Use custom BORDER_RIGHT if it was set
	[ -z "$BORDER_RIGHT" ] && \
		for((i=${#BORDER_LEFT}-1;i>=0;i--)); do BORDER_RIGHT="$BORDER_RIGHT${BORDER_LEFT:$i:1}"; done
#
#	Variable defaults
#
	script_version=1.2a
	ME="${0##*/}"
	help_text="
$ME ($script_version)
Usage: 		$ME [options] MSG
Examples:	$ME \"What is your favorite color?\"
		password=\$($ME -np \"Enter your password:\")
	-n	does not accept empty strings
	-p	does not show chars on input

"
	doPassword=""
	noEmpty=false
#
#	Variable handling
#
	[ -z "$1" ] && set "$TUI_INPUT_CHAR_READ" # printf "$help_text" && exit $RET_HELP
	[ "--help" = "$1" ] && printf "$help_text" && exit 99
	showVersion() { 
	cat <<-EOF
		GNU $ME, Version $script_version
		Copyright (C) 2015 Simon Arjuna Erat
		License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

		This is free software; you are free to change and redistribute it.
		There is NO WARRANTY, to the extent permitted by law.
	EOF
	}
	[ "--version" = "${1,,}" ] && showVersion && exit 0
	while getopts "hp" opt;do
	case "$opt" in
	"h")	printf "$help_text" ; exit $RET_HELP
		;;
	"p")	doPassword="-se"	
		;;
	"n")	noEmpty=true
		;;
	esac
	done
	shift $(($OPTIND - 1))
#
#	Check for read capabilities if not set yet
#
	LC_ALL=C $READ --help 2>&1 | $GREP -v bash > "$TUI_FILE_TEMP"
	# Delimiter	
	$GREP -q "\[-d" "$TUI_FILE_TEMP"
	bash_read_delimiter=$(tui-str-bol-conv -t $?)
	# Input
	$GREP -q "\[-i" "$TUI_FILE_TEMP"
	bash_read_input=$(tui-str-bol-conv -t $?)
	# Prompt
	$GREP -q "\[-p" "$TUI_FILE_TEMP"
	bash_read_prompt=$(tui-str-bol-conv -t $?)
	# Numbers
	$GREP -q "\[-n" "$TUI_FILE_TEMP"
	bash_read_numbers=$(tui-str-bol-conv -t $?)
	# Timeout
	$GREP -q "\[-t" "$TUI_FILE_TEMP"
	bash_read_timeout=$(tui-str-bol-conv -t $?)
#
#	Display
#
	tui-printf "$1" >&2
	POS="\033[$(( ${#BORDER_LEFT} + ${#1} +3 ))G"
	printf "\r$BORDER_LEFT $1$POS" >&2
	if $noEmpty
	then	while [ -z "$INPUT" ]
		do	read ${doPassword} INPUT </dev/tty
			[ "${INPUT:0:3}" = "^[[" ] && INPUT=""
		done
	else	read ${doPassword} INPUT </dev/tty
		[ "${INPUT:0:3}" = "^[[" ] && INPUT=""
	fi
	printf '%s' "$INPUT"  >&1
	[ -z "$doPassword" ] || printf "\n" >&2
