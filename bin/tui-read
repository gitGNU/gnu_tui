#!/usr/bin/env bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Author: 	Simon A. Erat (sea)
#	Contact:	erat.simon@gmail.com
#
#	Variable environment
#
	BORDER_RIGHT=""
	# Source only the most required files, 
	# create the RC and load all variable if RC is not present yet.
	source "$HOME/.tui_rc" && \
		. "$TUI_FILE_CONF_COMMANDS" && \
		. "$TUI_FILE_CONF_COLORS" && \
		. "$TUI_FILE_CONF_STATUS" && \
		. "$TUI_FILE_CONF_SYSTEM"  || \
		. tui
	# If there is a user theme directory, use that one instead
	[ -d "$TUI_DIR_USER_THEMES" ] && TUI_DIR_THEMES="$TUI_DIR_USER_THEMES"
	. "$TUI_DIR_THEMES/$TUI_THEME" 
	# Use custom BORDER_RIGHT if it was set
	[ -z "$BORDER_RIGHT" ] && \
		for((i=${#BORDER_LEFT}-1;i>=0;i--)); do BORDER_RIGHT="$BORDER_RIGHT${BORDER_LEFT:$i:1}"; done
#
#	Variable defaults
#
	script_version=1.0
	ME="$(basename $0)"
	help_text="
$ME ($script_version)
Usage: 		$ME [options] MSG
Examples:	$ME \"What is your favorite color?\"
		password=\$($ME -p \"Enter your password:\")

"
	doPassword=""
#
#	Variable handling
#
	[ -z "$1" ] && printf "$help_text" && exit $RET_HELP
	while getopts "hp" opt;do
	case "$opt" in
	"h")	printf "$help_text" ; exit $RET_HELP
		;;
	"p")	doPassword="-se"	
		;;
	esac
	done
	shift $(($OPTIND - 1))
#
#	Display
#
	[ -z "$1" ] && \
		txt="Type your input:" || \
		txt="$1"
	tui-printf "$txt" > /dev/stderr
	printf "\r$BORDER_LEFT $txt " > /dev/stderr
	read ${doPassword} INPUT
	
	# Seems this doesnt work here, as one presses enter and gets a linebreak from that.
	#[ -z "$doPassword" ] || INPUT="${$INPUT/\<password\>}"	
	#printf "\n\n" > /dev/stderr
#	tui-echo "$txt" "$INPUT" > /dev/stderr
	
	printf '%s' "$INPUT"  > /dev/stdout
	[ -z "$doPassword" ] || printf "\n" > /dev/stderr