#!/usr/bin/env bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Init TUI environment
#
#
#	Script Environment
#
	ME="${0##*/}"
	
	# Check the two default places for the core configuration
	# First systemwide, second user only install
	for tmp_task in "/etc" "${HOME:-/root}/.local" "$HOME"
	do 	[ -f "$tmp_task/tui.conf" ] && source "$tmp_task/tui.conf" && [ ! -z "${SYSCONFDIR}!" ] && break
	done
	# Get the main config files
	# 
	if source "${SYSCONFDIR}/tuirc" && source "${HOME:-/root}/.tuirc" 2>/dev/zero
	then 	# Load required variables
		for f in $TUI_FILE_{CONF,USER}_{APPS,COMMANDS,SETTINGS}
		do	[ -f "$f" ] && source "$f"
		done
		# Load language
		if [ -z "$TUI_LANG" ]
		then	[ -z "$LANG" ] && LANG=$(locale|sed s,[=\"],\ ,g|awk '/MESS/ {print $2}')
			lng="$(echo ${LANG/\.*})"
			echo "$TUI_DIR_LOCALE/"* | grep -q "${lng}" && \
				tui-conf-set "${HOME:-/root}/.tuirc" TUI_LANG "$lng" || \
				tui-conf-set "${HOME:-/root}/.tuirc" TUI_LANG en_GB
			# Sadly this echo is required to remove tailing spaces, probablly an issue of tui-conf-get (2015.08.21)
			TUI_LANG="$(echo $(tui-conf-get "${HOME:-/root}/.tuirc" TUI_LANG))"
		fi
		LANG_FILE=${ME/tui\-}.lng
		LANG_FILE="$TUI_DIR_LOCALE/${TUI_LANG}/$LANG_FILE"
		[ -f "$LANG_FILE" ] && source "$LANG_FILE" #|| tui-status 3 "$ME -- language file"
	else	source tuirc
	fi
	
#	if source /etc/tuirc && source "${HOME:-/root}/.tuirc"
#	then	for f in $TUI_FILE_{CONF,USER}_{APPS,COMMANDS,SETTINGS};do source "$f";done
#	else	source tuirc
#	fi
	break_on_injections "$@" && exit 1
#
#	File:		tui-log
#	Author: 	Simon Arjuna Erat (sea), erat.simon@gmail.com
#	License:	GNU General Public License (GPLv3)
#	Created:	2014.05.20
#	Changed:	2015.02.18
#
#	Description:	Simply writes a log file
#
#
#	Variables
#
	ME="${0##*/}"			# Basename of $0
	script_version=0.6.4
	PRE=""
	leave_empty=false
	D="$(date +%F)"
	T="$(date +%T)"
	daily_date_str="#### $(date +'%F') ####"	# Only used if log don't uses the date otherwise
	
	SEP="\t"
	beVerbose=false
#
#	Help text
#
	help_text="
$ME ($script_version)
The order of the options defines the string order.
Usage: 		$ME [options] \"LOGFILE\" \"Message\"
Examples:	$ME \"/var/log/appname.log\" \"Message\"
		$ME -dtp \"LOGFILE\" \"Server started\"
		$ME -pu \"LOGFILE\" \"Changed background\"
		
Where options are:
	-h(elp) 		This screen
	-e(mpty)		Prints just the message or nothing
	-d(ate)			Adds the DATE ($D) in front
	-t(ime)			Adds the TIME ($T) in front
	-p(id)			Adds the PID  ($$) in front
	-u(ser)			Adds the USER ($USER) in front
	-s(eparator)	ARG	Changes the the separator ($SEP) to ARG
	-v(verbose)		Prints the MESSAGE also to screen using tui-echo

"
#
#	Catching arguments
#
	[ "--help" = "$1" ] && printf "$help_text" && exit 99
	[ -z "$2" ] && printf "$help_text" && exit 1
	showVersion() { 
	cat <<-EOF
		GNU $ME, Version $script_version
		Copyright (C) 2015 Simon Arjuna Erat
		License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

		This is free software; you are free to change and redistribute it.
		There is NO WARRANTY, to the extent permitted by law.
	EOF
	}
	[ "--version" = "${1,,}" ] && showVersion && exit 0
	while getopts "hedtpus:v" opt
	do 	case $opt in
		h)	printf "$help_text"
			exit $RET_HELP		;;
		e)	leave_empty=true	;;
		d)	PRE+=" $D"		;;
		t)	PRE+=" $T"		;;
		p)	PRE+=" $$"		;;
		u)	PRE+=" $USER"		;;
		s)	SEP="$OPTARG"		;;
		v)	beVerbose=true		;;
		esac
	done
	shift $(($OPTIND - 1))
	LOG="$1"
	MSG="$2"
	if [ $leave_empty = false ]
	then 	[ -z "$PRE" ] && \
			PRE="$(date +'%F %T') $SEP " || \
			PRE="$PRE $SEP "
	fi
#
#	Action
#
	if [ ! -f "$LOG" ]
	then 	# Create log file, exit with message on error
		# Prints basic log header
		tui-bol-dir "$(dirname $LOG)" 1>/dev/zero 2>/dev/zero || tui-status 1 "Failed to create $(dirname $LOG)"
		if ! touch "$LOG" 2>/dev/zero
		then	tui-status 1 "Failed to create $LOG" 
			exit 1
		fi
		printf "$daily_date_str\n" > "$LOG"
	else 	# LOG exists
		D=$(date +'%F')
		# If PRE does not not contain today's date, see if the log contains,
		# if its missing there too, add today's date first
		printf "${PRE}${MSG}" | $GREP -q "$D" || \
			( $GREP -q "$D" "$LOG" || tui-log -e "$LOG" "$daily_date_str" )
	fi
	while [ " " = "${PRE:0:1}" ] ;do PRE="${PRE:1}";done	# Remove leading spaces
	$beVerbose && tui-echo "$MSG"
	printf "${PRE}${MSG}\n" >> "$LOG"
	