#!/usr/bin/env bash
#
# Copyright (c) 2013-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#
#	Variable defaults
#
#	STABLE: 2013.10.13	--- DONT CHANGE IT ---
#				unless everything is STABLE & BACKED UP !!
#	STABLE:	2015.01.20	Updated to check for curl/wget
#	Unstable: 2015.01.31    Doh, you changed it!
#
	source "$HOME/.tui_rc" && \
		. "$TUI_DIR_CONF/apps.conf" && \
		. "$TUI_DIR_CONF/commands.conf" && \
		. "$TUI_DIR_CONF/settings.conf" || \
		. tui	# This first call would create the RC if its missing.
	
	script_version=0.7.3
	ME="$(basename $0)"
	help_text="\r$ME ($script_version)
		\rUsage: $ME [options] URL [URL2] ..
		\rWhere options are:
		\r\t-h\tThis screen
		\r"
	ARGS=( "${@}" )
	FILE_TEMP="$TUI_DIR_CACHE/tui-download.status"
	FILE_CMD="$TUI_DIR_CACHE/bgjob"
	DEST=""
	tui-bol-dir "$TUI_DIR_CACHE" > /dev/zero
	#tui-echo "Downloading to:"  "$(pwd)"
	LIST_APPS="wget curl"
	CURLWGET=$(tui-conf-get /etc/tui/commands.conf CURLWGET)
#
#	Variable handling
#
	#[ -z "$1" ] && echo -e "$help_text" && exit $RET_HELP
	case "$1" in
	"-h")	echo -e "$help_text" ; exit $RET_HELP
		;;
	"")	unset ARGS[@]
		ARGS[0]=$(tui-read "Enter url to download:")
	esac
#
#	Display
#
	if [ -z "$CURLWGET" ]
	then	# Not set yet.
		for app in $LIST_APPS;do
			which $app 1>/dev/zero 2>/dev/zero && \
				CURLWGET=$app && \
				break
		done
		#set -x
		tui-conf-set "$APPS" CURLWGET "$CURLWGET"
	fi
	case "$CURLWGET" in
	curl)	OPT_O="-o"
		OPT_Q="-s"
		OPT_C=""	;;
	wget)	OPT_O="-O"
		OPT_Q="-q"
		OPT_C="-c"	;;
	"")	tui-status 1 "Could find neither curl nor wget!"
		tui-echo "Which one to install?"
		CURLWGET=$(tui-select curl wget)
		which $CURLWGET 1>/dev/zero && \
			tui-conf-set "$APPS" CURLWGET $CURLWGET || \
			exit 1
		tui-bol-sudo && \
			sudo tui-install $CURLWGET || \
			su -c "tui-install $CURLWGET" 
	esac
	
	for URL in "${ARGS[@]}"
	do 	THIS="$(basename $URL)"
		out_string="./$THIS"
		tui-printf -rS 2 "Initializing new download..." #"$WORK"
		#echo "wget -qc $URL" > $FILE_CMD
		echo "$CURLWGET $OPT_Q $OPT_C $OPT_O \"$THIS\" \"$URL\"" > $FILE_CMD
		
		chmod +x $FILE_CMD
		$FILE_CMD &
		sleep 1.5
		#K=1024
		
		str_left="Downloading..."
		str_middle="$THIS ($tmp_size)"	; len=${#str_middle}
		str_right="[  $(tui-indi)   ]"
		str_len=$(( ${#str_left} + ${#str_middle} + ${#str_right} + 2 ))
		
		#set -x
		# While its found, assume its till downloading...
		while [ ! "" = "$(ps|$GREP $CURLWGET)" ] #|| [ ! "" = "$(ps $!)" ]
		do	tmp_size="$(ls -hl |$GREP $THIS |$AWK '{print $5}')"
			COLUMNS=$(tput cols)
			str_middle="$THIS ($tmp_size)"
			len=${#str_middle}
			#echo "$COLUMNS == $str_len"
			diffr=$(( $(( $COLUMNS - $str_len  )) + 15 ))
			cut=$(($len - $diffr))
				
		#set -x
			
			# If length of middle string to display is larger than colums to display it
			# then cut of the trail of the display string
			
		#	echo "DIFFRENCE:: $diffr"
			#if [ $str_len -gt $COLUMNS ]
			if [ $diffr -ge 1 ]
			then	# Needs string cutting
				# Cut off this amount of strings. (+3 for the dots)
			#	echo "DIFFRENCE:: "$diffr
			#	echo "----"
			#	echo " $diffr"
			#	echo "----"
				
				if [ $diffr -gt $len ]
				then	# It makes sense to cut off pieces
					#str_middle_corrected="${str_middle:0:( -$diffr )}"
					str_middle_corrected="${str_middle:0:$diffr}"
					#str_middle_corrected="${str_middle:0:($len - $diffr)}"
				else	# No change required / reset to original
					str_middle_corrected="${str_middle}"
				fi
		#	elif [ $diffr -le -1 ]
		#	then	# Needs string cutting
		#		# Cut off this amount of strings. (+3 for the dots)
		#		echo " asd ---- awd"
		#		str_middle_corrected="${str_middle:0:$diffr}"
			else	# No change required / reset to original
				str_middle_corrected="${str_middle}"
				echo re
			fi
			
			tui-printf "$str_left" "${str_middle_corrected}" "[  $(tui-indi)   ]"
			sleep 1
		done
		tui-status $? "Downloaded: ${THIS}"
	done 
