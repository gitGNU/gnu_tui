#!/usr/bin/env bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
	if source /etc/tuirc && source "$HOME/.tuirc"
	then	for f in $TUI_FILE_USER $TUI_FILE_{CONF,USER}_{APPS,COMMANDS,SETTINGS};do source "$f";done
	else	. tuirc	# This first call would create the RC if its missing.
	fi
#
#	Author: 	Simon Arjuna Erat (sea)
#	Contact:	erat.simon@gmail.com
#	License:	GNU General Public License (GPL)
#	Created:	2014.04.26
#	Changed:	2015.06.11
	script_version=0.6
#	Description:	Helps to create a tui-browser project
#
#	Variables
#
	ME="${0##*/}"
	ME_DIR="${0/${0##/*/}}"
	TITLE="Create a new TUI project"
	help_text="
$ME ($script_version)
Usage: 	$ME [options] [arguments]

"
#
#	Project related variables
#
	optE_bool=false 	# For a working template
	ARG_TOGGLE_ANOTHER=none # For a working template
	APP_TITLE=""		# Project name
	APP_BASE=""		# Where is the project root
	APP_USER_LABEL=""	# Top left label
	APP_FOLDERS=""		# label for the directory section
	APP_FILES=""		# Label for the file section
	APP_FILE=""		# save point, starter script
	APP_DATA=""		# Where are the scripts to present
	APP_INCLUDE=""		# Path to files to include
	
#
#	Catching Arguments
#
	[ "--help" = "$1" ] && printf "$help_text" && exit 99
	showVersion() { 
	cat <<-EOF
		GNU $ME, Version $script_version
		Copyright (C) 2015 Simon Arjuna Erat
		License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

		This is free software; you are free to change and redistribute it.
		There is NO WARRANTY, to the extent permitted by law.
	EOF
	}
	[ "--version" = "${1,,}" ] && showVersion && exit 0
	while getopts "h" name
	do 	case $name in
		h|help)
			printf "$help_text"
			exit $RET_HELP
			;;
		# *)	printf "$help_text" ; exit $RET_HELP	;;
		esac
	done
	shift $(($OPTIND - 1))
#
#	Display & Action
#
	
	[ "--help" = "$1" ] && printf "$help_text" && exit 99
	tui-printf -H "$ME ($script_version)" "$(date +'%F %T')"
	tui-printf -T "$TITLE"
	tui-printf -E "Starting with basic required configuration"
# This is required for proper placement of files
	for task in 	APP_TITLE APP_FILE APP_BASE APP_MENU
	do
		case "$task" in
		APP_TITLE)
			Q="What is the $task, may contain spaces:"
			tui-echo "$Q"
			TASK=$(tui-read)
			APP_TITLE="${APP_TITLE:-${1:-Project Name}}"
			;;
		APP_FILE)
			Q="What is the name of the $task to execute:"
			tui-echo "$Q"
			TASK=$(tui-read)
			APP_FILE="${APP_FILE:-${1:-project-binary}}"
			;;
		APP_BASE)
			Q="Where will \"$APP_FILE\" be stored ($default_new_browser_dir):"
			tui-echo "$Q"
			TASK=$(tui-read)
			APP_BASE="${APP_BASE:-${1:-$TUI_DIR_}}"
			;;
		APP_MENU)
			Q="How do you want to name your ${TUI_FONT_BOLD}$APP_BASE${RESET}/<$task> directory:"
			tui-echo "$Q"
			TASK=$(tui-read)
			APP_MENU="${APP_MENU:-${1:-}}"
			;;
		esac
	done
# This is optional
	if tui-yesno "Would you like to apply some more template configuration/tweakings?"
	then	for task in 	APP_USER_LABEL APP_FOLDERS APP_FILES  APP_INCLUDE
		do
			case "$task" in
			APP_USER_LABEL)
				Q=""
				eval "$TASK=$(tui-read \"${Q:-}\")"
				APP_USER_LABEL="${APP_USER_LABEL:-${1:-}}"
				;;
			APP_FOLDERS)
				Q=""
				eval "$TASK=$(tui-read \"${Q:-}\")"
				APP_FOLDERS="${APP_FOLDERS:-${1:-}}"
				;;
			APP_FILES)
				Q=""
				eval "$TASK=$(tui-read \"${Q:-}\")"
				APP_FILES="${APP_FILES:-${1:-}}"
				;;
			APP_INCLUDE)
				Q=""
				eval "$TASK=$(tui-read \"${Q:-}\")"
				APP_INCLUDE="${APP_INCLUDE:-${1:-}}"
				;;
			esac
		done
	fi
# Create the structure	
	# Optional
	if tui-yesno "Make more changes?"
	then	tui-title "$INFO" "Leave empty for default values, use 1 space for empty fields" "$INFO"
		APP_FOLDERS=$(tui-read "What is the new caption for folders:")
		APP_FILES=$(tui-read "What is the new caption for files:")
		APP_USER_LABEL=$(tui-read "What is the new caption for upper right top line:")
	fi
	
	if ${default_new_browser_manpage_create:-true}
	then	case "${default_new_browser_manpage_type:-application}" in
		application)	var_opt="-a"	;;
		*)		var_opt=""	;;
		esac
		tui-bol-dir -v "$APP_BASE/man"
		${0/browser/manpage} $varOpt "$APP_BASE/man/$APP_FILE"
	fi
	
	source "$TUI_DIR_TEMPLATES/browser" > "$APP_BASE/$APP_FILE"
	chmod +x "$APP_BASE/$APP_FILE"
	tui-filemgr "$APP_BASE"
	

	exit 0
	# OLD STUFF
	exit 0
	# OLD STUFF
	exit 0
	
	
	
	tui-echo "Welcome to the guide about how to create a new framework based on tui-browser."
	tui-echo
	# MUST BE
	tui-title "Required Information:"
	APP_NAME=$(tui-read "What is the folder its name?")
	
	tui-echo
	tui-echo "The project its title, displayed in the upper left header area, may contain spaces."
	APP_TITLE=$(tui-read "What is the project its name or title:")
	
	tui-echo
	APP_FILE=$(tui-read "What is the filename to execute (name only):")
	
	tui-echo
	APP_BASE=$(tui-read "Where is the '$APP_FILE' saved (just path, leave empty for $default_new_browser_dir/$APP_NAME):")
	APP_BASE="${APP_BASE:-$default_new_browser_dir/$APP_NAME}"
	
	tui-echo
	tui-echo "Where are the scripts to present $APP_TITLE?"
	APP_DATA=$(tui-read "Leave  subdirname to $APP_BASE/")
	
	tui-echo
	tui-bol-dir "$APP_BASE/$APP_DATA"
	
	# Optional
	if tui-yesno "Make more changes?"
	then	tui-title "$INFO" "Leave empty for default values, use 1 space for empty fields" "$INFO"
		APP_FOLDERS=$(tui-read "What is the new caption for folders:")
		APP_FILES=$(tui-read "What is the new caption for files:")
		APP_USER_LABEL=$(tui-read "What is the new caption for upper right top line:")
	fi
	
	if ${default_new_browser_manpage_create:-true}
	then	case "${default_new_browser_manpage_type:-application}" in
		application)	var_opt="-a"	;;
		*)		var_opt=""	;;
		esac
		tui-bol-dir -v "$APP_BASE/man"
		${0/browser/manpage} $varOpt "$APP_BASE/man/$APP_FILE"
	fi
	
	source "$TUI_DIR_TEMPLATES/browser" > "$APP_BASE/$APP_FILE"
	chmod +x "$APP_BASE/$APP_FILE"
	tui-filemgr "$APP_BASE"
	
