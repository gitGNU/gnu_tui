#!/usr/bin/env bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANT ABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Author: 	Simon Arjuna Erat (sea)
#	Contact:	erat.simon@gmail.com
#	License:	GNU General Public License 3 (GPLv3)
#	Created:	2011.07.10
#	Changed:	2015.12.03
	script_version=0.9.3
#	Description:	Prints a random number between 0 and 100.
#			Prints a random number up to MAX.
#			Prints a random number between MIN and MAX.
#
#	Variables
#
	ME="${0##*/}"
	for tmp_task in "/etc" "${HOME:-/root}/.local" "$HOME"
	do 	[ -f "$tmp_task/tui.conf" ] && source "$tmp_task/tui.conf" && [ ! -z "${SYSCONFDIR}!" ] && break
	done
	# Get the main config files
	# 
	if source "${SYSCONFDIR}/tuirc" || ( [ -f ./tuirc ] && source ./tuirc )
	then 	# Load required variables
		for f in $TUI_FILE_{CONF,USER}_{APPS,COMMANDS,SETTINGS}
		do	[ -f "$f" ] && source "$f"
		done
	else	source tuirc
	fi
	break_on_injections "$@" && exit 1
	doPerm=false
	doList=false
	PERM_NUM=""
	LIST_NUM=""
	MIN=""
	MAX=""
	c=0
	
#
#	Translate preps
#
	source gettext.sh
	TEXTDOMAIN="${0##*/}"	# Will be changed over time, but easier to copy paste
	TEXTDOMAINDIR="${TUI_DIR_SYSTEM/tui/locale}"	# Will be changed over time, but easier to copy paste
	export TEXTDOMAIN TEXTDOMAINDIR
#
#	Translate strings
#
	TR_MSG_TEXT_VERSION="$(eval_gettext '
TUI ($ME, Version $script_version)
Copyright (C) 2011-2015 Simon Arjuna Erat
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
')"
	TR_MSG_TEXT_HELP="$(gettext '
NAME
  $ME - Prints a random number within range (1-100 by without arguments)

SYNOPSYS
  $ME [-h|--help] [--version] [-p|--perm COUNT [STARTVALUE]] [MAXVAL] [MINVAL MAXVAL]
  
OPTIONS
  -h|--help	Shows help and exit with 99
  --version	Shows version infoand exit with 0
  
  -p|--perm COUNT	Print COUNT different random numbers
 
EXAMPLE

	$ME
	35
	
	$ME 15
	14
	
	$ME 300 320
	303
	
	$ME -p 5 200
	203 204 201 202 200
	
	$ME -l 3 100 200
	176 109 133
	

BUGS
  Report bugs to: <tui-support@nongnu.org>
  
  TUI - Homepage: <https://savannah.nongnu.org/projects/tui>
  
  General help using GNU software: <http://www.gnu.org/gethelp/>

AUTHOR
  Simon Arjuna Erat, <http://linux-scripter.blogspot.ch>
')"

	help_text="$TR_MSG_TEXT_HELP
	
"
#
#	Catching Arguments
#
	showVersion() { 
	cat <<-EOF
		$TR_MSG_TEXT_VERSION
	EOF
	}
	case "$1" in
	"--version")
		showVersion
		exit 0
		;;
	"-p"|"--perm")
		doPerm=true
		PERM_NUM="$2"
		shift 2
		# Permutation requires some calulations
		case $# in
		1|2)	# If 2, too many arguments, ignoring...
			MIN=$(( $1 ))
			MAX=$(( $1 + $PERM_NUM ))
			;;
		esac
		;;
	"-l"|"--list")
		doList=true
		LIST_NUM="$2"
		shift 2
		;;
	"-h"|"--help")
		printf "$help_text"
		exit 99
		;;
	esac
	case $# in
	0)	MIN=${MIN:-1}
		MAX=${MAX:-100}
		;;
	1)	MIN=${MIN:-1}
		MAX=${MAX:-$1}
		;;
	2)	MIN=${MIN:-$1}
		MAX=${MAX:-$2}
		;;
	esac
#
#	Functions
#
	myRND() { #
	#
	#
		VAR=$[ $RANDOM % $MAX ]
		while  [ $VAR -lt $MIN ] || [ $VAR -gt $MAX ] 
		do	VAR=$[ $RANDOM % $MAX ]
			# This is required, otherwise one never gets the 'max' value.
			VAR=$(( $VAR + 1 ))
		done
		printf "$VAR\n"
	}
#
#	Display & Action
#
#
	if $doList
	then	declare -A L
		while [ $c -lt $LIST_NUM ]
		do
			n=$(myRND)
			while echo "${L[@]}" | $GREP -q $n
			do	n=$(myRND)
			done
			L[$c]=$n
			((c++))
		done
		echo "${L[@]}"
		unset L
	elif $doPerm
	then 	# This part (permutation) is originaly from RupertPumpkin
		# http://forums.fedoraforum.org/showpost.php?p=1748816&postcount=6
		# but has been modified by sea to match this command functionality
		declare -A P
		R=$RANDOM
		for x in $(eval echo {${MIN}..${MAX}}); do
			while 	[ -n "${P[$R]}" ]
			do	R=$RANDOM
			done
			P[$R]="$x"
		done
		echo "${P[@]}"
		unset P
	else	myRND		
	fi
