#!/usr/bin/env bash
# ------------------------------------------------------------------------
#
# Copyright (c) 2015 by Simon Arjuna Erat (sea), erat.simon@gmail.com
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License (GPL) as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANT ABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License (GPL) for more details.
#
# You should have received a copy of the GNU General Public License (GPL)
# along with this program.  If not, see http://www.gnu.org/licenses/gpl.html
#
# ------------------------------------------------------------------------
#
	for tmp_task in "/etc" "${HOME:-/root}/.local" "$HOME"
	do 	[ -f "$tmp_task/tui.conf" ] && source "$tmp_task/tui.conf" && [ ! -z "${SYSCONFDIR}!" ] && break
	done
	# Get the main config files
	# 
	if source "${SYSCONFDIR}/tuirc" || ( [ -f ./tuirc ] && source ./tuirc )
	then 	# Load required variables
		for f in $TUI_FILE_CONF_{APPS,COMMANDS,SETTINGS}
		do	[ -f "$f" ] && source "$f"
		done
	else	source tuirc
	fi
	# Disabled code injection protection,
	# as one can run a script (which contains whatever), which bypasses those checks anyway...
	# break_on_injections "$@" && exit 1
	TERM="${TERM:-GNU\057Linux}"
#
#	File:		tui-asroot
#	Author: 	Simon Arjuna Erat (sea)
#	Contact:	erat.simon@gmail.com
#	License:	GNU General Public License (GPL)
#	Created:	2015.04.05
#	Changed:	2015.11.07
	script_version=0.9.2-alpha
#	Description:	Executes passed command as root
#
#
#	Script Environment
#
	ME="${0##*/}"				# Base name of tui-asroot
#
#	Translate preps
#
	source gettext.sh
	TEXTDOMAIN="${0##*/}"	# Will be changed over time, but easier to copy paste
	TEXTDOMAINDIR="${TUI_DIR_SYSTEM/tui/locale}"	# Will be changed over time, but easier to copy paste
	export TEXTDOMAIN TEXTDOMAINDIR
#
#	Translate strings
#
	TR_MSG_TEXT_VERSION="$(eval_gettext '
TUI ($ME, Version $script_version)
Copyright (C) 2011-2015 Simon Arjuna Erat
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
')"
	TR_MSG_TEXT_HELP="$(eval_gettext '
NAME
  $ME - Execute a command with root privileges

SYNOPSYS
  $ME [-h|--help] [--version] [-m "MES SA GE" ]
  
DESCRIPTION
  Enables the author of a script to make sure certain commands are executed with root account privileges.
  This helps the author of scripts to simplify the task to get done.
  
OPTIONS
  -h|--help	Shows help and exit with 99
  --version	Shows version infoand exit with 0
  
  -m MSG	Prints "MSG" before asking for a password
 
ENVIRONMENT
  TERM	If TERM is not set, TUI will set it to GNU/Linux, this is required to determine wether TUI runs in GUI or VT (cli only) mode.
  UID	Reads UID to determine wether the user is root or not.
  USER	If user is empty, it takes LOGINNAME to display the user name for sudo.
  
EXAMPLE

	tui-asroot whoami
	
	tui-asroot "cat /etc/passwd"

SEE ALSO
  su(1), sudo(1)
  
BUGS
  Report bugs to: <tui-support@nongnu.org>
  TUI - Homepage: <https://savannah.nongnu.org/projects/tui>
  General help using GNU software: <http://www.gnu.org/gethelp/>

AUTHOR
  This script ($ME, $script_version) was written by Simon Arjuna Erat from Switzerland.
')"
	TEXT_HELP="$TR_MSG_TEXT_HELP
"
	#------------------------------------------
	TR_MSG_TEXT_PASSWORD="$(eval_gettext 'Please provide the password for $USER')"
	TR_MSG_TEXT_ROOT="$(gettext 'Please provide the password for root')"
#
#	Catching Arguments
#
	# Get access to the passed value of the argument by using $OPTARG
	[ "--help" = "$1" ] && printf '%s\n' "$TEXT_HELP" && exit 99
	[ "--version" = "${1,,}" ] && printf '%s\n' "$TR_MSG_TEXT_VERSION" && exit 0
	while getopts hm: opt
	do 	case "$opt" in
		h)	printf '%s\n' "$TEXT_HELP"
			exit 99
			;;
		m)	MSG="$OPTARG"
			shift 2
		esac
	done
#
#	Display & Action
#
	if tui-bol-root
	then	# When passing eg: bash /path/to/script, quotes causes a failure!
		#eval "${@}"
		eval "${@}" #>&2
		exit "$?"
	elif "${useSudo:-false}" && which "$SUDO" 2>/dev/null 1>/dev/null
	then	tui-print -E  "${MSG:-$TR_MSG_TEXT_PASSWORD}" >&2
		"${SUDO:-sudo}" ${@} 	>&2
		exit "$?"
	else	tui-print -E  "${MSG:-$TR_MSG_TEXT_ROOT}"
		su -c "$(echo $@)" 		>&2
		exit "$?"
	fi
	exit 1
