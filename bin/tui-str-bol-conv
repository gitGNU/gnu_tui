#!/usr/bin/env bash
# ------------------------------------------------------------------------
#
# Copyright (c) 2015 by Simon Arjuna Erat (sea), erat.simon@gmail.com
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License (GPL) as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANT ABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License (GPL) for more details.
#
# You should have received a copy of the GNU General Public License (GPL)
# along with this program.  If not, see http://www.gnu.org/licenses/gpl.html
#
# ------------------------------------------------------------------------
#
	ME="${0##*/}"
	for tmp_task in "/etc" "${HOME:-/root}/.local" "$HOME"
	do 	[ -f "$tmp_task/tui.conf" ] && source "$tmp_task/tui.conf" && [ ! -z "${SYSCONFDIR}!" ] && break
	done
	# Get the main config files
	# 
	if source "${SYSCONFDIR}/tuirc" || ( [ -f ./tuirc ] && source ./tuirc )
	then 	# Load required variables
		source "${HOME:-/root}/.tuirc" 2>/dev/zero
		for f in $TUI_FILE_{CONF,USER}_{APPS,COMMANDS,SETTINGS}
		do	[ -f "$f" ] && source "$f"
		done
	else	source tuirc
	fi
	TERM="${TERM:-GNU Linux}"
	break_on_injections "$@" && exit 1
#
#	File:		tui-str-bol-conv
#	Author: 	Simon Arjuna Erat (sea)
#	Contact:	erat.simon@gmail.com
#	License:	GNU General Public License (GPL)
#	Created:	2015.05.14
#	Changed:	2015.11.07
	script_version=0.9.1
#	Description:	Converts binary exit codes to strings
#
#
#	Script Environment
#
	ME="${0##*/}"			# Basename of tui-str-bol-conv
	TEMPFILE="$TUI_FILE_TEMP"	# Tempfile
#
#	Translate preps
#
	source gettext.sh
	TEXTDOMAIN="${0##*/}"	# Will be changed over time, but easier to copy paste
	TEXTDOMAINDIR="${TUI_DIR_SYSTEM/tui/locale}"	# Will be changed over time, but easier to copy paste
	export TEXTDOMAIN TEXTDOMAINDIR
#
#	Translate strings
#
	TR_MSG_TEXT_VERSION="$(eval_gettext '
TUI ($ME, Version $script_version)
Copyright (C) 2011-2015 Simon Arjuna Erat
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
')"
	TR_MSG_TEXT_HELP="$(eval_gettext '
NAME
  $ME - Converts a bool return value in text

SYNOPSYS
  $ME [-h|--help] [--version] [-hcCdty] \044?
  
OPTIONS
  -h|--help	Shows help and exit with 99
  --version	Shows version infoand exit with 0
  
  -c		Makes first letter Capital
  -C		Makes all letters CAPITAL
  -d		Returns: done/fail
  -t		Returns: true/false
  -y		Returns: yes/no
 
EXAMPLE

	tui-yesno "Do you like this?"
	
	answer_word=\044($ME -y \044?)

BUGS
  Report bugs to: erat.simon@gmail.com
  
  TUI - Homepage: <http://www.gnu.org/software/tui/>
  
  General help using GNU software: <http://www.gnu.org/gethelp/>

AUTHOR
  Simon Arjuna Erat, <http://linux-scripter.blogspot.ch>
')"


#
#	Functions
#
	function help_screen() {
	# Simply shows the help screen
	# 
		cat <<-HELP_SCREEN
		$TR_MSG_TEXT_HELP
		HELP_SCREEN
	}
#
#	Defaults
#
	caps=false
	CAPS=false
	mode="yes"
	out=""
#
#	Catching Arguments
#
	# A ':' after a char indicates that this option requires an argument
	# Get access to the passed value of the argument by using $OPTARG
	case "$1" in
	"--help"|"")	help_screen
			exit 99
			;;
	"--version")	cat <<-EOF
				$TR_MSG_TEXT_VERSION
			EOF
			exit 0
			;;
	esac
	
	while getopts "hcCdoty" opt
	do 	case $opt in
		h)	help_screen
			exit 99
			;;
		c)	caps=true	;;
		C)	CAPS=true	;;
		d)	mode="done"	;;
		t)	mode="true"	;;
		y)	mode="yes"	;;
		o)	mode="on"	;;
		*)	help_screen ; exit 99	;;
		esac
	done
	shift $(($OPTIND - 1))
#
#	Display & Action
#
	[ -z "$1" ] && help_screen && exit 1
	case "$mode" in
	"done")	case "$1" in
		0)	out="$(gettext 'done')"	;;
		1)	out="$(gettext 'fail')"	;;
		esac
		;;
	"true")	case "$1" in
		0)	out="$(gettext 'true')"	;;
		1)	out="$(gettext 'false')"	;;
		esac
		;;
	"yes")	case "$1" in
		0)	out="$(gettext 'yes')"	;;
		1)	out="$(gettext 'no')"	;;
		esac
		;;
	"on")	case "$1" in
		0)	out="$(gettext 'on')"	;;
		1)	out="$(gettext 'off')"	;;
		esac
		;;
	esac
	
	if $CAPS
	then	echo "${out^^}"
	elif $caps
	then	echo "${out^}"
	else	echo "$out"
	fi
