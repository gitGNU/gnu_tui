#!/usr/bin/env bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Variable defaults
#
	script_version=0.9
	ME="${0##*/}"
	
	for tmp_task in "/etc" "${HOME:-/root}/.local" "$HOME"
	do 	[ -f "$tmp_task/tui.conf" ] && source "$tmp_task/tui.conf" && [ ! -z "${SYSCONFDIR}!" ] && break
	done
	# Get the main config files
	# 
	if source "${SYSCONFDIR}/tuirc" && source "${HOME:-/root}/.tuirc" 2>/dev/zero
	then 	# Load required variables
		for f in $TUI_FILE_{CONF,USER}_{APPS,COMMANDS,SETTINGS}
		do	[ -f "$f" ] && source "$f"
		done
	else	source tuirc
	fi
	break_on_injections "$@" && exit 1
#
#	Translate preps
#
	source gettext.sh
	TEXTDOMAIN="${0##*/}"	# Will be changed over time, but easier to copy paste
	TEXTDOMAINDIR="${TUI_DIR_SYSTEM/tui/locale}"	# Will be changed over time, but easier to copy paste
	export TEXTDOMAIN TEXTDOMAINDIR
#
#	Translate strings
#
	TR_MSG_TEXT_VERSION="$(eval_gettext '
GNU $ME, Version $script_version
Copyright (C) 2011-2015 Simon Arjuna Erat
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
')"
	
	help_text="$(eval_gettext '$ME ($script_version)
Usage: $ME [-v] [-c] /path/to/check
Returns 0 if '/path/to/check' was found or could be created

Report bugs to: erat.simon@gmail.com
TUI home page: <http://www.gnu.org/software/tui/>
General help using GNU software: <http://www.gnu.org/gethelp/>
')"
	showVersion() { 
	cat <<-EOF
		$TR_MSG_TEXT_VERSION
	EOF
	}
	beVerbose=false
	countFails=false
	while :
	do
		case "${1,,}" in
		--version)
			showVersion
			exit 0
			;;
		-v)
			beVerbose=true
			shift
			;;
		-c)
			countFails=true
			shift
			;;
		""|"-h"|"--help")
			echo -e "$help_text"
			RET=99
			exit $RET
			;;
		*|--)	break	;;
		esac
	done
#
#	Display
#
	FAILED=0
	RET=0
	ARGS=( $(printf '%s\n' "${@}") )
	for dir_name in "${ARGS[@]}"
	do 	FAILED=$(( $FAILED + $RET ))
		# Is it a linkfile?
		if [ -L "$dir_name" ] && [ -f "$dir_name" ]
		then	$beVerbose && tui-status 1 "$(eval_gettext 'Found link: $dir_name')" || \
			RET=1
			continue
		fi
		# Is it a file but not a link?
		if [ -f "$dir_name" ] && [ ! -L "$dir_name" ] #2>/dev/zero
		then	$beVerbose && tui-status 1 "$(eval_gettext 'Found file: $dir_name')"
			RET=1
			continue
		fi
		# A link that is a directory?
		if [ -L "$dir_name" ] && [ -d "$dir_name" ] 2>/dev/zero
		then	$beVerbose && tui-status 0 "$(eval_gettext 'Found link: $dir_name')"
			RET=0
			continue
		fi
		# Or just a plain original directory?
		if [ -d "$dir_name" ]
		then	$beVerbose && tui-status 0 "$(eval_gettext 'Found path: $dir_name')"
			RET=0
			continue
		fi
		# It does not exit yet, attempt to create it
		mkdir -p "$dir_name" 2>/dev/zero
		RET=$?
		if $beVerbose
		then	[ $RET -eq 0 ] && \
				tui-status 0 "$(eval_gettext 'Successfully created: $dirname')" || \
				tui-status 1 "$(eval_gettext 'Could not create: $dir_name')"
		fi
		# NEXT !
	done
	if $beVerbose
	then	$countFails && tui-status $RET "$(eval_gettext 'There has been $FAILED errors.')" && RET=$FAILED
	else	$countFails && RET=$FAILED
	fi
	exit $RET