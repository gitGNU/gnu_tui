#!/usr/bin/env bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	System defaults
#
	source "$HOME/.tui_rc" && \
		. "$TUI_DIR_CONF/apps.conf" && \
		. "$TUI_DIR_CONF/commands.conf" && \
		. "$TUI_DIR_CONF/settings.conf" && \
		. "$TUI_FILE_CONF_APPS" && \
		. "$TUI_FILE_CONF_SETTINGS" || \
		. tui	# This first call would create the RC if its missing, and load all the required variables.
#
#	Variable defaults
#
	script_version=0.6
	ME="${0##*/}"
	
	help_text="$ME ($script_version)
		\rUsage: $ME [options] 'URL1' 'URL2' ...
		\rOpens provided URL/s in \$BROWSER_[CLI,GUI]
		\r"
#
#	Variable handling
#
	[ -z "$1" ] && printf "$help_text" && exit $RET_HELP
	for A in "${@}";do
	case "$A" in
	"-h")	printf "$help_text" ; exit $RET_HELP
		;;
	"-m")	MODE=$2
		shift 2
		;;
	esac
	done
	ARGS=($(echo "${@}"))
	# Get the mode
	tui-bol-gui && \
		MODE=gui || \
		MODE=cli
#
#	Functions
#
	GetAvailableApp() { # gui|cli
	# Returns the first found editor for either GUI or CLI
	#
		[ -z "$1" ] && echo "GetAvailableApp requires: gui or cli" && return 1
		
		case "$1" in
		cli)	LIST="w3m lynx elinks"	;;
		gui)	LIST="firefox chrome chromium epiphany konqueror midori opera seamonkey safari "	;;
		esac
		
		for L in $LIST;do
			which $L 2>/dev/zero 1>/dev/zero && \
				echo "$L" && \
				return 0
		done
		return 1
	}
#
#	Display
#
	if [ -z "$BROWSER" ]
	then	case $MODE in
		cli)	BROWSER=$(which $BROWSER_CLI 2>/dev/zero)	;;
		gui)	BROWSER=$(which $BROWSER_GUI 2>/dev/zero)	;;
		esac
		export BROWSER
	fi
	# Failsafe check, use first available editor found if set EDITOR was not found
	if ! which $BROWSER 2>/dev/zero 1>/dev/zero
	then 	# The EDITOR is not available, search for default
		BROWSER=$(GetAvailableApp $MODE)
		[ $MODE = cli ] && \
			var=BROWSER_CLI || \
			var=BROWSER_GUI
		[ -z "$BROWSER" ] && \
			tui-echo "No filemanager for $MODE mode could be found, please change \"$CONF\" manualy!" && \
			exit 1
		tui-conf-set -v "$CONF" "$var" "$BROWSER"
	fi
	
	for A in "${ARGS[@]}";do
		$BROWSER "$A"
	done
