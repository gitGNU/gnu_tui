#!/usr/bin/env bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Variable environment
#
	BORDER_RIGHT=""
	# Source only the most required files, 
	# create the RC and load all variable if RC is not present yet.
	if source /etc/tuirc && source "${HOME:-/root}/.tuirc" 2>/dev/zero
	then	for f in $TUI_FILE_CONF_{COMMANDS,COLORS,SETTINGS}
		do	[ -f "$f" ] && source "$f"
		done
	else	source tuirc
	fi
	# If there is a user theme directory, use that one instead
	[ -f "$TUI_DIR_USER_THEMES/$TUI_THEME" ] && \
		use_DIR_THEME="$TUI_DIR_USER_THEMES" || \
		use_DIR_THEME="$TUI_DIR_THEMES"
	source "$use_DIR_THEME/$TUI_THEME" 
	# Use custom BORDER_RIGHT if it was set
	[ -z "$BORDER_RIGHT" ] && \
		for((i=${#BORDER_LEFT}-1;i>=0;i--)); do BORDER_RIGHT="$BORDER_RIGHT${BORDER_LEFT:$i:1}"; done
#
#	Variable defaults
#
	script_version=0.9.0b
	ME="${0##*/}"
	help_text="$ME ($script_version)
		\rUsage: $ME \"Question:\"
		\rReturns on user press of: o,j,s,y
		\r"
	ARGS_COUNT=$#
	help_text="
$ME ($script_version)
Usage: 	$ME \"Question\"

Example: (Accepts: 'y,o,j,s', denies everything else)
	if $ME 'Do you want to do this?'
	then echo yes
	else echo no
	fi

"
	answer=""
#
#	Check for read capabilities if not set yet
#
	LC_ALL=C $READ --help 2>&1 | $GREP -v bash > "$TUI_FILE_TEMP"
	# Delimiter	
	$GREP -q "\[-d" "$TUI_FILE_TEMP"
	bash_read_delimiter=$(tui-str-bol-conv -t $?)
	# Input
	$GREP -q "\[-i" "$TUI_FILE_TEMP"
	bash_read_input=$(tui-str-bol-conv -t $?)
	# Prompt
	$GREP -q "\[-p" "$TUI_FILE_TEMP"
	bash_read_prompt=$(tui-str-bol-conv -t $?)
	# Numbers
	$GREP -q "\[-n" "$TUI_FILE_TEMP"
	bash_read_numbers=$(tui-str-bol-conv -t $?)
	# Timeout
	$GREP -q "\[-t" "$TUI_FILE_TEMP"
	bash_read_timeout=$(tui-str-bol-conv -t $?)
#
#	Variable handling
#
	case "$1" in
	"")	printf "$help_text"
		exit $RET_HELP
		;;
	"--version")
		cat <<-EOF
			GNU $ME, Version $script_version
			Copyright (C) 2015 Simon Arjuna Erat
			License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

			This is free software; you are free to change and redistribute it.
			There is NO WARRANTY, to the extent permitted by law.
		EOF
		exit 0
		;;
	"-h"|"--help")
		printf "$help_text"
		exit $RET_HELP
		;;
	esac
	
#
#	Display
#
	while ! echo "${answer,,}" | $GREP -q ^[yoijsYOJISNn] #= "${answer:0:1}" ] #|| [ ! "^[A-Z]" = "$answer" ]
	do	tui-printf "$1" > /dev/stderr
		printf "\r$BORDER_LEFT $1 (y/n) " > /dev/stderr
		$bash_read_numbers && \
			read -n1 answer || \
			read answer
	done
	printf "\r"  > /dev/stderr
	tui-echo "$1 (y/n)  " "$answer"  > /dev/stderr
	case "$answer" in
	    y|o|j|s|Y|O|J|S)
	    		# First letter of the meaning "yes" in these languages:
			# English, Fran√ßais, Deutsch, Italiano
			exit 0    ;;
	    *)          exit 1    ;;
	esac
