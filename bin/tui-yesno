#!/usr/bin/env bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANT ABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Variable environment
#
	BORDER_RIGHT=""
	# Source only the most required files, 
	# create the RC and load all variable if RC is not present yet.
	ME="${0##*/}"
	for tmp_task in "/etc" "${HOME:-/root}/.local" "$HOME"
	do 	[ -f "$tmp_task/tui.conf" ] && source "$tmp_task/tui.conf" && [ ! -z "${SYSCONFDIR}!" ] && break
	done
	# Get the main config files
	# 
	if source "${SYSCONFDIR}/tuirc" && source "${HOME:-/root}/.tuirc" 2>/dev/zero
	then 	# Load required variables
		for f in $TUI_FILE_{CONF,USER}_{APPS,COMMANDS,SETTINGS}
		do	[ -f "$f" ] && source "$f"
		done
	else	source tuirc
	fi
	TERM="${TERM:-GNU Linux}"
	break_on_injections "$@" && exit 1
	# If there is a user theme directory, use that one instead
	[ -f "$TUI_DIR_USER_THEMES/$TUI_THEME" ] && \
		use_DIR_THEME="$TUI_DIR_USER_THEMES" || \
		use_DIR_THEME="$TUI_DIR_THEMES"
	source "$use_DIR_THEME/$TUI_THEME" 
	# Use custom BORDER_RIGHT if it was set
	[ -z "$BORDER_RIGHT" ] && \
		for((i=${#BORDER_LEFT}-1;i>=0;i--)); do BORDER_RIGHT="$BORDER_RIGHT${BORDER_LEFT:$i:1}"; done
#
#	Variable defaults
#
	script_version=0.9.0d
	ME="${0##*/}"
#
#	Translate preps
#
	source gettext.sh
	TEXTDOMAIN="${0##*/}"	# Will be changed over time, but easier to copy paste
	TEXTDOMAINDIR="${TUI_DIR_SYSTEM/tui/locale}"	# Will be changed over time, but easier to copy paste
	export TEXTDOMAIN TEXTDOMAINDIR
#
#	Translate strings
#
	TR_MSG_TEXT_VERSION="$(eval_gettext '
GNU TUI ($ME, Version $script_version)
Copyright (C) 2011-2015 Simon Arjuna Erat
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
')"
	TR_MSG_TEXT_HELP="$(eval_gettext '
NAME
  $ME - Put a simple yes or no question

SYNOPSYS
  $ME [-h|--help] [--version] "Question to user?"
  
OPTIONS
  -h|--help	Shows help and exit with 99
  --version	Shows version infoand exit with 0
 
EXAMPLE

	if $ME "Do you want to do this?"
	then 	echo "yes"
	else 	echo "no"
	fi
  
BUGS
  Report bugs to: erat.simon@gmail.com
  
  GNU TUI - Homepage: <http://www.gnu.org/software/tui/>
  
  General help using GNU software: <http://www.gnu.org/gethelp/>

AUTHOR
  Simon Arjuna Erat, <http://linux-scripter.blogspot.ch>
')"


	MSG_TR_YESNO="$(gettext 'y/n')"
	answer=""
	GREP="${GREP:-\grep}"
	READ="${READ:-\read}"
	
#
#	Check for read capabilities if not set yet
#
	LC_ALL=C "$READ" --help 2>&1 | "$GREP" -v bash > "$TUI_FILE_TEMP"
	# Delimiter	
	"$GREP" -q "\[-d" "$TUI_FILE_TEMP"
	bash_read_delimiter="$(tui-str-bol-conv -t $?)"
	# Input
	"$GREP" -q "\[-i" "$TUI_FILE_TEMP"
	bash_read_input="$(tui-str-bol-conv -t $?)"
	# Prompt
	"$GREP" -q "\[-p" "$TUI_FILE_TEMP"
	bash_read_prompt="$(tui-str-bol-conv -t $?)"
	# Numbers
	"$GREP" -q "\[-n" "$TUI_FILE_TEMP"
	bash_read_numbers="$(tui-str-bol-conv -t $?)"
	# Timeout
	"$GREP" -q "\[-t" "$TUI_FILE_TEMP"
	bash_read_timeout="$(tui-str-bol-conv -t $?)"
#
#	Variable handling
#
	case "$1" in
	"")	echo "$TR_MSG_TEXT_HELP"
		exit $RET_HELP
		;;
	"--version")
		echo "$TR_MSG_TEXT_VERSION"
		exit 0
		;;
	"-h"|"--help")
		echo "$TR_MSG_TEXT_HELP"
		exit $RET_HELP
		;;
	esac
	cnt_prev=${#BORDER_LEFT}
	BORDER_LEFT="${BORDER_COLOR}${BORDER_LEFT}${TUI_RESET}"
	cnt=$(( ${#BORDER_COLOR} + ${#TUI_RESET}  ))
	pos=$(( ${#1} + $cnt + 8 ))
#
#	Display
#
	while ! echo "${answer,,}" | "$GREP" -q ^[yoijsYOJISNn] #= "${answer:0:1}" ] #|| [ ! "^[A-Z]" = "$answer" ]
	do	tui-printf -r "$1" >&2
		#printf "\r$POS"
		printf "\r$BORDER_LEFT $1 ($MSG_TR_YESNO) " >&2
		"$bash_read_numbers" && \
			"$READ" -n1 answer || \
			"$READ" answer
	done
	printf "\r"   >&2
	tui-echo "$1 ($MSG_TR_YESNO) " "$answer"  >&2
	case "$answer" in
	    y|o|j|s|Y|O|J|S)
	    		# First letter of the meaning "yes" in these languages:
			# English, Fran√ßais, Deutsch, Italiano
			# Need a better code for more languages, like jpn, arabic, krylic, serb, etc..
			exit 0    ;;
	    *)          exit 1    ;;
	esac
