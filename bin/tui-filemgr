#!/usr/bin/env bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Init TUI environment
#
	ME="${0##*/}"
	for tmp_task in "/etc" "${HOME:-/root}/.local" "$HOME"
	do 	[ -f "$tmp_task/tui.conf" ] && source "$tmp_task/tui.conf" && [ ! -z "${SYSCONFDIR}!" ] && break
	done
	# Get the main config files
	# 
	if source "${SYSCONFDIR}/tuirc" && source "${HOME:-/root}/.tuirc" 2>/dev/zero
	then 	# Load required variables
		for f in $TUI_FILE_{CONF,USER}_{APPS,COMMANDS,SETTINGS}
		do	[ -f "$f" ] && source "$f"
		done
		# Load language
		if [ -z "$TUI_LANG" ]
		then	[ -z "$LANG" ] && LANG=$(locale|sed s,[=\"],\ ,g|awk '/MESS/ {print $2}')
			lng="$(echo ${LANG/\.*})"
			echo "$TUI_DIR_LOCALE/"* | grep -q "${lng}" && \
				tui-conf-set "${HOME:-/root}/.tuirc" TUI_LANG "$lng" || \
				tui-conf-set "${HOME:-/root}/.tuirc" TUI_LANG en_GB
			# Sadly this echo is required to remove tailing spaces, probablly an issue of tui-conf-get (2015.08.21)
			TUI_LANG="$(echo $(tui-conf-get "${HOME:-/root}/.tuirc" TUI_LANG))"
		fi
		LANG_FILE=${ME/tui\-}.sh
		LANG_FILE="$TUI_DIR_LOCALE/${TUI_LANG}/$LANG_FILE"
		[ -f "$LANG_FILE" ] && source "$LANG_FILE" #|| tui-status 3 "$ME -- language file"
	else	source tuirc
	fi
	break_on_injections "$@" && exit 1
#
#	Variable defaults
#
	script_version=0.6.2
	ME="${0##*/}"
#
#	Check for the environment to load
#
	if source /etc/tuirc && source "$HOME/.tuirc"
	then	break_on_injections "$@" && exit 1
		for f in $TUI_FILE_{CONF,USER}_{APPS,COMMANDS,SETTINGS};do source "$f";done
	else	. tuirc	# This first call would create the RC if its missing.
	fi
	help_text="$ME ($script_version)
		\rUsage: $ME LOCATION1 [/path/to/]LOCATION2 [../]LOCATION3 ...
		\rOpens provided LOCATION/s in the file manager.
		\rDoes only work in GUI.
		\r
		\r"
#
#	Variable handling
#
	showVersion() { 
	cat <<-EOF
		GNU $ME, Version $script_version
		Copyright (C) 2015 Simon Arjuna Erat
		License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

		This is free software; you are free to change and redistribute it.
		There is NO WARRANTY, to the extent permitted by law.
	EOF
	}
	[ "--version" = "${1,,}" ] && showVersion && exit 0
	for A in "${@}";do
	case "$A" in
	"-h"|"--help")	printf "$help_text" ; exit 99
		;;
	"-m")	MODE=$2
		shift 2
		;;
	esac
	done
	ARGS=( "${@}")
#
#	Functions
#
	GetAvailableApp() { # gui|cli
	# Returns the first found editor for either GUI or CLI
	#
		for L in $(<$TUI_DIR_LIST/editor_${MODE});do
			which $L 2>/dev/zero && \
				return 0
		done
		return 1
	}
#
#	Display
#
	# Get the mode
	$(which tui-bol-gui) && \
		MODE=gui || \
		MODE=cli
	
	if [ -z "$FILEMGR" ]
	then	case $MODE in
		cli)	FILEMGR=$(which $FILEMGR_CLI 2>/dev/zero)	;;
		gui)	FILEMGR=$(which $FILEMGR_GUI 2>/dev/zero )	;;
		esac
		export FILEMGR
	fi
	# Failsafe check, use first available editor found if set EDITOR was not found
	if ! which $FILEMGR 2>/dev/zero 1>/dev/zero
	then 	# The EDITOR is not available, search for default
		FILEMGR=$(GetAvailableApp $MODE)
		[ $MODE = cli ] && \
			var=FILEMGR_CLI || \
			var=FILEMGR_GUI
		[ -z "$FILEMGR" ] && tui-echo "No file manager for $MODE mode could be found, please change \"$CONF\" manually!" && exit 1
		tui-conf-set "$TUI_FILE_USER_APPS" $var $FILEMGR
	fi
	
	for A in "${@}";do
		$FILEMGR "$A"
	done
