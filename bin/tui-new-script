#!/usr/bin/env bash
#
# Copyright (c) 2014-2015 Simon Arjuna Erat (sea)  <erat.simon@gmail.com>
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#
# ------------------------------------------------------------------------
#
#	Variable defaults
#
	source tui
	script_version=1.3
	ME="${0##*/}"
	help_text="
$ME ($script_version)
Creates a new script in $HOME/bin, if $HOME/.local/bin doesnt exists.
Also asks to create a basic manpage template in the same location.

Usage:  	$ME [options] [path/to/]FILENAME # Creates the file in that location
Examples:	$ME fileA.sh			# Creates a script in ~/bin or ~/.local/bin if existing
		$ME -s /opt/bin/fileB.sh	# Creates a standalone application script in /opt/bin
Where options are:
	-h		This screen
	-s(tandalone)	Create a standalone application script template
	-r(egular)	Creates a same as default (no option), but less pre-sets
	-t(ool)		Creates a template optimized for quiet and verbose mode
	-m(inimal)	Creates a minimal header
	
"
	DEST=""
	TITLE="sea's New script script"
	SCRIPT="modul" # The default
#
#	Variable handling
#
	tui-title "$TITLE ($script_version)"
	while getopts "hsrtm" name
	do 	case $name in
		h)	printf "$help_text"
			exit $RET_HELP	;;
		s)	SCRIPT="standalone"	;;
		r)	SCRIPT="regular"	;;
		t)	SCRIPT="tool"	;;
		m)	SCRIPT="minimal"	;;
		# *)	printf "$help_text" ; exit $RET_HELP	;;
		esac
	done
	shift $(($OPTIND - 1))
#
#	Display
#
	if [ -z "$1" ]
	then	DEST=$(tui-read "Enter the filename:")
		if [ "$DEST" = "${DEST##*/}" ]
		then	DEST="$TUI_DIR_USER_SCRIPTS/$DEST"
			tui-bol-dir "$(dirname $DEST)"
		else	DEST="$1"
			tui-bol-dir -v "$(dirname $DEST)"
		fi
	else	if [ "$1" = "$(basename $1)" ]
		then	DEST="$TUI_DIR_USER_SCRIPTS/$DEST"
			tui-bol-dir "$(dirname $DEST)"
		else	DEST="$1"
			tui-bol-dir -v "$(dirname $DEST)"
		fi
	fi
	
	if [ -f "$DEST" ]
	then	tui-yesno "File $DEST exists... Overwrite?" || mv "$DEST" "$DEST-$(date +'%F-%T').bak"
		tui-status $? "Overwrite file: $DEST"
	fi
	source $TUI_DIR_TEMPLATES/templates/scripts/$SCRIPT
	if tui-status $? "Saved: $(printf $DEST)"
	then	chmod +x "$DEST"
	else	exit $?
	fi
	doMan=false
	
	tui-yesno "Create a manpage too?" && \
		tui-new-manpage "$DEST"
	
	# Open the scriot AFTER the manpage... to encourage the writing of the manpages ;)
	tui-edit "$DEST"