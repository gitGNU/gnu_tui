# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-09-29 11:55+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#: bin/tui-browser:47
msgid "Text User Interface"
msgstr ""

#: bin/tui-browser:50
#, sh-format
msgid ""
"\n"
"NAME\n"
"  $ME ($script_version)\n"
"\n"
"SYNOPSIS\n"
"  $ME [-h|--help] [--version] [-mnqS] [-p DIR_OF_MENU_ROOT]\n"
"  \t[-c /path/to/file.conf] [-s /path/to/files/to/include]\n"
"\t[-D LABEL_DIR] [-F LABEL_FILES] \n"
"\t[-L LABEL_LOCATION] [-P LABEL_POSITION] \n"
"\t[-T LABEL_TITLE] [-U LABEL_USER]\n"
"\t[-b WORD_TO_BLACKLIST] [-d PREFIX_FOR*.{info,help,cmd}]\n"
"\t[-X SHELL_OF_CONTAINED_SCRIPTS]\n"
"\t[ARG UM ENTS]\n"
"  \n"
"  Where ARG could be a subfolder, UM a script and ENTS an argument to the \n"
"  script, of the passed \"-p /path/to/menu\".\n"
"\n"
"DESCRIPTION\n"
"  This is \"The one script to rule them all!\" :)\n"
"  \n"
"  It is ment to give a highly customizeable tool to be used for your own "
"\"file and directory based\" projects.\n"
"  It uses its arguments to match among its root directory folders and files, "
"and changes to a path or executes files, even with argumemts.\n"
"\n"
"  It lets you browse through the folders, using either a \"select\" based "
"menu ( -m num ) or a text based menu ( -m text - default ).\n"
"\n"
"  Also, one can simply provide help test within each folder, by simply "
"providing a file named default.info which each should contain only text, and "
"will be read line-wise before showing either the text or numeric menu.\n"
"\n"
"  Furthermore it helps to ease the task of catching arguments per file, "
"since no matter how deep the file is, it handles arguments as if it was "
"called directly.\n"
"\n"
"OPTIONS\n"
"  -b WORD\tBlacklists a certain string from beeing executed ( text mode "
"only )\n"
"  \n"
"  -c /path/to/file.conf \tFull path to the configuration file of your "
"project. All  variables  provided with that file, will be exported and are "
"available by all called within the sub dirs of your root.\n"
"\n"
"  -D STRING\tThe \"Directory\" section will be labled as STRING ( text mode "
"only )\n"
"\n"
"  -d STRING\tFor the path based info files, STRING will be used, rather than "
"default (default).\n"
"\n"
"  -F STRING\tThe \"File\" section will be labled as STRING ( text mode "
"only )\n"
"\n"
"  -L STRING\tRenames Location: to STRING (2nd line upper left)\n"
"\n"
"  -m\tWhen provided, enables textmode , default is numeric.\n"
"\n"
"  -P STRING\tThe \"Position\" section will be labled as STRING (2nd line "
"upper right)\n"
"\n"
"  -p /path/to/menu/root \tPass this if you want a specific path to be the "
"menu-root.\n"
"\n"
"  -n\t Do no clear screen before the menu is shown again.\n"
"\n"
"  -S\tForces to show the location/position (2nd) line to be shown when "
"executing a script directly.\n"
"  Most likely you want to use this only when you use -P STRING or -L STRING "
"as well.\n"
"\n"
"  -s /path/to/files/to/include  \tSources all files found in /path/to/files/"
"to/include and exports  all  VARIABLES  and  FUNCTIONS\n"
"  found within the files.\n"
"\n"
"  -T TITLE\tThis  TITLE  will  be  used in the top left as project title, "
"and also when scripts are executed\n"
"  before the passed arguments.\n"
"\n"
"  -U STRING\tChanges the default userstring from $USER_NAME to STRING (top "
"right)\n"
"  \n"
"  -d NAME\tChanges the file name string from \"default\" to \"NAME\"\n"
"\t\tThese files will be hidden from the menu, and according to their "
"extension be called on different purposes...\n"
"\t\t* default.help - Will be shown if no script named \"help\" is found\n"
"\t\t* default.info - Will be shown upon folder entry\n"
"\t\t* default.cmd - Will be executed upon folder entry\n"
"  \n"
"  -q\t\tDoes not show header, title, footer\n"
"\t\n"
"  -X\tSHELL\tWhich shell to use to execute scripts, default bash\n"
"\n"
"EXAMPLES\n"
"  Open the browser with the current directory as \"root\".\n"
"\n"
"\t$ME\n"
" \n"
"  Opens the browser using provided -p /path/to/menu path.\n"
"\n"
"\t$ME -p \"$HOME/path with spaces\"\n"
"         \n"
"  Starts the browser, using \"My script manager\" as title, and prints "
"\"Contains \\044(ls|wc -l) entries\" in the username area (top right), and "
"shares the values of /path/to/config/file.conf among all scripts the browser "
"will call, by exporting those variables, using /path/to/menu as base/root "
"directory shown in the \"Location bar\"\n"
"\n"
"\t$ME\t-T \"My script manager\" \\134\\134\n"
"\t\t\t-p \"/path/to/menu\" \\134\\134\n"
"\t\t\t-U \"Contains \\044(ls\\174wc -l) entries\" \\134\\134\n"
"\t\t\t-c /path/to/config/file.conf \\134\\134\n"
"\t\t\t\"\\044{@}\"\n"
"\n"
"NUMERIC MODE\n"
"  The numeric mode is for easy and quick access and browse through the \"BASE"
"\" (-p PATH) and all its subdirectories.\n"
"  If one would \"leave\" the BASE directory to a toplevel one, $ME will "
"exit. While browsing, only numeric inputs within range shown will be "
"accepted, at any (sub-)level, all content of the current location will be "
"displayed. With the exception of the \"default.{cmd,info,help}\" files, "
"unless changed by -d STRING is provided, in which case it still hides all "
"\"STRING.{cmd,info,help}\" files.\n"
"  In both modes, default.{str,info} will be looked for, and if found, "
"default.cmd will be sourced, with all variables and functions provided in "
"the files passed with -c FILE and -s DIR/FILE, while default.info will be "
"shown before the directory content.\n"
"\n"
"TEXTMODE\n"
"  While the default numeric mode is for quick and easy access, the textmode, "
"enabled with -m gives you a quite diffrent design or layout.\n"
"  The main diffrence is, one doesnt select among numbers, but must enter the "
"name of the item.\n"
"  This said, and since one has the ability to write anyway, i also wanted to "
"give you the possibility to block certain words. Similar to the numeric "
"mode, at all times you have the option to go back or quit, by entering: b, "
"B, BACK, back, Back or q, Q, quit, QUIT, Quit\n"
"\n"
"SEE ALSO\n"
"  tuirc(1), tui-bol-dir(1), tui-bol-gui(1), tui-bol-root(1), tui-cat(1), \n"
"  tui-cp(1), tui-download(1), tui-echo(1), tui-edit(1), tui-header(1),\n"
"  tui-install(1), tui-list(1), tui-log(1), tui-mv(1), tui-new-browser(1), \n"
"  tui-new-manpage(1), tui-new-script(1), tui-press(1), tui-printf(1), \n"
"  tui-progress(1), tui-read(1), tui-select(1), tui-status(1), tui-tar(1), \n"
"  tui-terminal(1), tui-title(1), tui-wait(1), tui-web(1), tui-yesno(1)\n"
"  \n"
"BUGS\n"
"  Report bugs to: erat.simon@gmail.com\n"
"  \n"
"  GNU TUI - Homepage: <http://www.gnu.org/software/tui/>\n"
"  \n"
"  General help using GNU software: <http://www.gnu.org/gethelp/>\n"
"\n"
"AUTHOR\n"
"  Simon Arjuna Erat, <http://linux-scripter.blogspot.ch>\n"
msgstr ""
